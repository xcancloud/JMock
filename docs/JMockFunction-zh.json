[
  {
    "clazz": "cloud.xcan.jmock.core.function.basic.MString",
    "name": "@String()",
    "description": "生成随机字符串",
    "tags": [
      "数据类型"
    ],
    "constructors": [
      {
        "instance": "@String()",
        "description": "生成6位固定长度的随机字符",
        "example": "@String()",
        "exampleValues": [
          "ceja7d"
        ]
      },
      {
        "instance": "@String(length)",
        "description": "生成固定长度字符串",
        "parameters": [
          {
            "name": "length",
            "description": "字符串长度，默认 6，最大长度 2^31-1 个字符"
          }
        ],
        "example": "@String(2)",
        "exampleValues": [
          "uy",
          "h8"
        ]
      },
      {
        "instance": "@String(min,max)",
        "description": "生成指定长度范围的随机字符",
        "parameters": [
          {
            "name": "min",
            "description": "最小长度，不指定时默认长度 0（返回空串\"\"），如果同时指定了 length 当前参数不生效"
          },
          {
            "name": "max",
            "description": "最大长度，最大长度上限 2^31-1 个字符，如果同时指定了 length 当前参数不生效"
          }
        ],
        "example": "@String(2,6)",
        "exampleValues": [
          "ht8ut",
          "cy"
        ]
      },
      {
        "instance": "@String(length,nullWeight)",
        "description": "生产固定范围长度的字符串，并指定null值占比",
        "parameters": [
          {
            "name": "length",
            "description": "字符串长度，默认 6，最大长度 2^31-1 个字符"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@String(3,\"1:2\")",
        "exampleValues": [
          "ec2",
          "null",
          "c3a"
        ]
      },
      {
        "instance": "@String(length,nullWeight,chars)",
        "description": "在用户指定字符集内生成固定长度字符串，并指定null值占比",
        "parameters": [
          {
            "name": "length",
            "description": "字符串长度，默认 6，最大长度 2^31-1 个字符"
          },
          {
            "name": "chars",
            "description": "用于生成字符串的字符集元素，不指定时默认从 52 英文字母（a-z A-Z）和 10 个阿拉伯数字（0-9）中随机选择指定长度字符串，最大 2^31-1 个字符数，如：123456ABCDEF"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@String(3,\"1:2\",abcdef123456)",
        "exampleValues": [
          "ec2",
          "f36",
          "c3a"
        ]
      },
      {
        "instance": "@String(length,min,max,chars,nullWeight)",
        "description": "完整参数构造器，具体请查看完整参数说明",
        "parameters": [
          {
            "name": "length",
            "description": "字符串长度，默认 6，最大长度 2^31-1 个字符"
          },
          {
            "name": "min",
            "description": "最小长度，不指定时默认长度 0（返回空串\"\"），如果同时指定了 length 当前参数不生效"
          },
          {
            "name": "max",
            "description": "最大长度，最大长度上限 2^31-1 个字符，如果同时指定了 length 当前参数不生效"
          },
          {
            "name": "chars",
            "description": "用于生成字符串的字符集元素，不指定时默认从 52 英文字母（a-z A-Z）和 10 个阿拉伯数字（0-9）中随机选择指定长度字符串，最大 2^31-1 个字符数，如：123456ABCDEF"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@String(1,,,ABCDE,\"1:2\")",
        "exampleValues": [
          "A",
          "null",
          "B",
          "C",
          "null"
        ]
      }
    ],
    "parameters": [
      {
        "name": "length",
        "description": "字符串长度，默认 6，最大长度 2^31-1 个字符"
      },
      {
        "name": "min",
        "description": "最小长度，不指定时默认长度 0（返回空串\"\"），如果同时指定了 length 当前参数不生效"
      },
      {
        "name": "max",
        "description": "最大长度，最大长度上限 2^31-1 个字符，如果同时指定了 length 当前参数不生效"
      },
      {
        "name": "chars",
        "description": "用于生成字符串的字符集元素，不指定时默认从 52 英文字母（a-z A-Z）和 10 个阿拉伯数字（0-9）中随机选择指定长度字符串，最大 2^31-1 个字符数，如：123456ABCDEF"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 101
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.basic.MLong",
    "name": "@Long()",
    "description": "用于生成任意长整型（8字节）数值",
    "tags": [
      "数据类型"
    ],
    "constructors": [
      {
        "instance": "@Long()",
        "description": "生成一个值范围为 0 ～ 9223372036854775807 随机长整数",
        "example": "@Long()",
        "exampleValues": [
          "2567071027"
        ]
      },
      {
        "instance": "@Long(nullWeight)",
        "description": "生成一个值范围为 0 ～ 9223372036854775807 随机长整数，并指定null值占比",
        "parameters": [
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Long(\"1:2\")",
        "exampleValues": [
          "98089",
          "null",
          "28907625479"
        ]
      },
      {
        "instance": "@Long(min,max)",
        "description": "生成一个值范围为 min ～ max 随机长整数",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0L，其中字符`L`表示值为长整形参数值"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 9223372036854775807L"
          }
        ],
        "example": "@Long(1L,10000000000L)",
        "exampleValues": [
          "1109",
          "34008978",
          "87256252199901"
        ]
      },
      {
        "instance": "@Long(min,max,nullWeight)",
        "description": "完整参数构造器，生成一个值范围为 min ～ max 随机长整数，并指定null值占比",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0L，其中字符`L`表示值为长整形参数值"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 9223372036854775807L"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Long(-10000L,100000L,)",
        "exampleValues": [
          "198",
          "594",
          "-17865",
          "9876",
          "37092"
        ]
      }
    ],
    "parameters": [
      {
        "name": "min",
        "description": "最小值，不指定默认最小 0L，其中字符`L`表示值为长整形参数值"
      },
      {
        "name": "max",
        "description": "最大值，不指定时默认最大 9223372036854775807L"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 102
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.basic.MInteger",
    "name": "@Integer()",
    "description": "用于生成任意整型（4字节）数值",
    "tags": [
      "数据类型"
    ],
    "constructors": [
      {
        "instance": "@Integer()",
        "description": "生成一个值范围为 0 ～ 2147483647 随机整数",
        "example": "@Integer()",
        "exampleValues": [
          "666",
          "8888"
        ]
      },
      {
        "instance": "@Integer(nullWeight)",
        "description": "生成一个值范围为 0 ～ 2147483647 随机整数，并指定null值占比",
        "parameters": [
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Integer(\"1:2\")",
        "exampleValues": [
          "8760182",
          "237",
          "null"
        ]
      },
      {
        "instance": "@Integer(min,max)",
        "description": "生成一个值范围为 min ～ max 随机整数",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 2147483647"
          }
        ],
        "example": "@Integer(100,200)",
        "exampleValues": [
          "162",
          "133",
          "191"
        ]
      },
      {
        "instance": "@Integer(min,max,nullWeight)",
        "description": "完整参数构造器，生成一个值范围为 min ～ max 随机整数，并指定null值占比",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 2147483647"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Integer(-100000,100000,\"1:3\")",
        "exampleValues": [
          "-7811",
          "null",
          "78732",
          "12909",
          "76028"
        ]
      }
    ],
    "parameters": [
      {
        "name": "min",
        "description": "最小值，不指定默认最小 0"
      },
      {
        "name": "max",
        "description": "最大值，不指定时默认最大 2147483647"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 102
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.basic.MDouble",
    "name": "@Double()",
    "description": "生成任意任意双精度浮点数（8字节）",
    "tags": [
      "数据类型"
    ],
    "constructors": [
      {
        "instance": "@Double()",
        "description": "生成一个值范围为 0 ～ 9223372036854775807 随机长整数",
        "example": "@Double()",
        "exampleValues": [
          "78.99"
        ]
      },
      {
        "instance": "@Double(scale)",
        "description": "生成一个值范围为 0 ～ 3.40282346638528860e+38 精度为 scale 随机双精度浮点型数值",
        "parameters": [
          {
            "name": "scale",
            "description": "精度位，不指定时默认为 2"
          }
        ],
        "example": "@Double(3)",
        "exampleValues": [
          "7.987",
          "89.909",
          "85.231"
        ]
      },
      {
        "instance": "@Double(nullWeight)",
        "description": "生成一个值范围为 0 ～ 9223372036854775807 随机长整数，并指定null值占比",
        "parameters": [
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Double(\"1:2\")",
        "exampleValues": [
          "89.90",
          "null",
          "999.90"
        ]
      },
      {
        "instance": "@Double(min,max)",
        "description": "生成一个值范围为 min ～ max 随机长整数",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0D，其中字符`D`表示值为双精度浮点型参数值"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 1.79769313486231570e+308"
          }
        ],
        "example": "@Double(88,999999)",
        "exampleValues": [
          "99.99",
          "899.99",
          "7865.09"
        ]
      },
      {
        "instance": "@Double(min,max,scale)",
        "description": "生成一个值范围为 min ～ max 且精度为 scale 随机双精度浮点型数值",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0D，其中字符`D`表示值为双精度浮点型参数值"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 1.79769313486231570e+308"
          },
          {
            "name": "scale",
            "description": "精度位，不指定时默认为 2"
          }
        ],
        "example": "@Double(88,99999,4,\"1:2\")",
        "exampleValues": [
          "888.9087",
          "null",
          "666.9087"
        ]
      },
      {
        "instance": "@Double(min,max,scale,nullWeight)",
        "description": "完整参数构造器，具体请查看完整参数说明",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0D，其中字符`D`表示值为双精度浮点型参数值"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 1.79769313486231570e+308"
          },
          {
            "name": "scale",
            "description": "精度位，不指定时默认为 2"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Double(88,99999,4,\"1:2\")",
        "exampleValues": [
          "888.9087",
          "null",
          "666.9087"
        ]
      }
    ],
    "parameters": [
      {
        "name": "min",
        "description": "最小值，不指定默认最小 0D，其中字符`D`表示值为双精度浮点型参数值"
      },
      {
        "name": "max",
        "description": "最大值，不指定时默认最大 1.79769313486231570e+308"
      },
      {
        "name": "scale",
        "description": "精度位，不指定时默认为 2"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 103
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.basic.MFloat",
    "name": "@Float()",
    "description": "生成任意浮点型（4字节）数值",
    "tags": [
      "数据类型"
    ],
    "constructors": [
      {
        "instance": "@Float()",
        "description": "生成一个值范围为 0 ～ 3.40282346638528860e+38 随机浮点型数值",
        "example": "@Float()",
        "exampleValues": [
          "1.2222222"
        ]
      },
      {
        "instance": "@Float(scale)",
        "description": "生成一个值范围为 0 ～ 3.40282346638528860e+38 精度为 scale 随机浮点型数值",
        "parameters": [
          {
            "name": "scale",
            "description": "精度位，不指定时默认为 2"
          }
        ],
        "example": "@Float(5)",
        "exampleValues": [
          "87901.01127",
          "3092290435.18326"
        ]
      },
      {
        "instance": "@Float(nullWeight)",
        "description": "生成一个值范围为 0 ～ 3.40282346638528860e+38 随机浮点型数值，并指定null值占比",
        "parameters": [
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Float(1:2)",
        "exampleValues": [
          "1.2222222"
        ]
      },
      {
        "instance": "@Float(min,max)",
        "description": "生成一个值范围为 min ～ max 随机浮点型数值",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 3.40282346638528860e+38"
          }
        ],
        "example": "@Float(5,15)",
        "exampleValues": [
          "5.2222222"
        ]
      },
      {
        "instance": "@Float(min,max,scale)",
        "description": "生成一个值范围为 min ～ max 且精度为 scale 随机浮点型数值",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 3.40282346638528860e+38"
          },
          {
            "name": "scale",
            "description": "精度位，不指定时默认为 2"
          }
        ],
        "example": "@Float(5,15,2)",
        "exampleValues": [
          "5.22"
        ]
      },
      {
        "instance": "@Float(min,max,scale,nullWeight)",
        "description": "完整参数构造器，具体请查看完整参数说明",
        "parameters": [
          {
            "name": "min",
            "description": "最小值，不指定默认最小 0"
          },
          {
            "name": "max",
            "description": "最大值，不指定时默认最大 3.40282346638528860e+38"
          },
          {
            "name": "scale",
            "description": "精度位，不指定时默认为 2"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Float(0,10,5,1:2)",
        "exampleValues": [
          "1.22222"
        ]
      }
    ],
    "parameters": [
      {
        "name": "min",
        "description": "最小值，不指定默认最小 0"
      },
      {
        "name": "max",
        "description": "最大值，不指定时默认最大 3.40282346638528860e+38"
      },
      {
        "name": "scale",
        "description": "精度位，不指定时默认为 2"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 103
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.basic.MEnum",
    "name": "@Enum()",
    "description": "用于随机生成固定常量",
    "tags": [
      "数据类型"
    ],
    "constructors": [
      {
        "instance": "@Enum(dict)",
        "description": "默认，生成指定字典的常量值，每个常量值占比相同，即为1:1。",
        "parameters": [
          {
            "name": "dict",
            "description": "用于生成枚举常量的值，多个值通过“|”分隔，不能为空。"
          }
        ],
        "example": "@Enum(HIGH|WIDTH)",
        "exampleValues": [
          "HIGH"
        ]
      },
      {
        "instance": "@Enum(dict,valueWeight)",
        "description": "生成指定字典的常量值，并指定每个常量值的占比。",
        "parameters": [
          {
            "name": "dict",
            "description": "用于生成枚举常量的值，多个值通过“|”分隔，不能为空。"
          },
          {
            "name": "valueWeight",
            "description": "值的生成比例，不指定默认：“1:1:1....”。"
          }
        ],
        "example": "@Enum(HIGH|WIDTH,1:1)",
        "exampleValues": [
          "HIGH",
          "WIDTH"
        ]
      },
      {
        "instance": "@Enum(dict,valueWeight,nullWeight)",
        "description": "生成指定字典的常量值，并指定每个常量值的占比和null值占比。",
        "parameters": [
          {
            "name": "dict",
            "description": "用于生成枚举常量的值，多个值通过“|”分隔，不能为空。"
          },
          {
            "name": "valueWeight",
            "description": "值的生成比例，不指定默认：“1:1:1....”。"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Enum(HIGH|WIDTH,1:1,1:2)",
        "exampleValues": [
          "HIGH",
          "WIDTH",
          "null"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "用于生成枚举常量的值，多个值通过“|”分隔，不能为空。"
      },
      {
        "name": "valueWeight",
        "description": "值的生成比例，不指定默认：“1:1:1....”。"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 104
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.basic.MBool",
    "name": "@Bool()",
    "description": "生成布尔类型值",
    "tags": [
      "数据类型"
    ],
    "constructors": [
      {
        "instance": "@Bool()",
        "description": "生成true或false，比例2：1",
        "example": "@Bool()",
        "exampleValues": [
          "true",
          "false"
        ]
      },
      {
        "instance": "@Bool(trueWeight)",
        "description": "生成true、false、null，其中null按指定占比生成",
        "parameters": [
          {
            "name": "trueWeight",
            "description": "为真比例，如值：“2:1” ，表示生成随机 Bool 值 3 次平均 2 次为 true，一次为 false，默认：2:1"
          }
        ],
        "example": "@Bool(2:1)",
        "exampleValues": [
          "true",
          "true",
          "false"
        ]
      },
      {
        "instance": "@Bool(trueWeight,nullWeight)",
        "description": "生成true、false、null，其中true占比为trueWeight，null占比为nullWeight",
        "parameters": [
          {
            "name": "trueWeight",
            "description": "为真比例，如值：“2:1” ，表示生成随机 Bool 值 3 次平均 2 次为 true，一次为 false，默认：2:1"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Bool(2:1,1:5)",
        "exampleValues": [
          "true",
          "null",
          "false"
        ]
      },
      {
        "instance": "@Bool(trueWeight,nullWeight,dict)",
        "description": "完整参数构造器，具体请查看完整参数说明。",
        "parameters": [
          {
            "name": "trueWeight",
            "description": "为真比例，如值：“2:1” ，表示生成随机 Bool 值 3 次平均 2 次为 true，一次为 false，默认：2:1"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          },
          {
            "name": "dict",
            "description": "用于生成布尔值的字典，字典值通过|分隔，只能有两个值，且第一个对应true，第二个对应false，例如：1|0,男|女，不指定时默认 true 和 false"
          }
        ],
        "example": "@Bool(2:1,1:5,1|0)",
        "exampleValues": [
          "1",
          "null",
          "0"
        ]
      }
    ],
    "parameters": [
      {
        "name": "trueWeight",
        "description": "为真比例，如值：“2:1” ，表示生成随机 Bool 值 3 次平均 2 次为 true，一次为 false，默认：2:1"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      },
      {
        "name": "dict",
        "description": "用于生成布尔值的字典，字典值通过|分隔，只能有两个值，且第一个对应true，第二个对应false，例如：1|0,男|女，不指定时默认 true 和 false"
      }
    ],
    "order": 105
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.basic.MRegExp",
    "name": "@RegExp()",
    "description": "根据正则表达式生成随机值",
    "tags": [
      "数据类型"
    ],
    "constructors": [
      {
        "instance": "@RegExp(regexp)",
        "description": "根据正则表达式生成随机值",
        "parameters": [
          {
            "name": "regexp",
            "description": "用于生成数据的正则表达式"
          }
        ],
        "example": "@RegExp([a-z][a-z][0-9])",
        "exampleValues": [
          "kK8",
          "Cs9"
        ]
      },
      {
        "instance": "@RegExp(regexp,nullWeight)",
        "description": "根据正则表达式生成随机值，并指定null值占比",
        "parameters": [
          {
            "name": "regexp",
            "description": "用于生成数据的正则表达式"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@RegExp([a-z][a-z][0-9],1:2)",
        "exampleValues": [
          "kK8",
          "null"
        ]
      }
    ],
    "parameters": [
      {
        "name": "regexp",
        "description": "用于生成数据的正则表达式"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 110
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.date.MTimestamp",
    "name": "@Timestamp()",
    "description": "生成当前时间对应的时间戳",
    "tags": [
      "日期与时间"
    ],
    "constructors": [
      {
        "instance": "@Timestamp()",
        "description": "生成当前操作系统的时间戳",
        "example": "@Timestamp()",
        "exampleValues": [
          "1653432546438"
        ]
      },
      {
        "instance": "@Timestamp(unix)",
        "description": "生成指定类型的当前操作系统时间戳",
        "parameters": [
          {
            "name": "unix",
            "description": "false，生成包含毫秒值的系统时间戳，设置成 true 时生成 Unix 时间戳，即自1970年1月1日00:00:00 UTC以来经过的秒数"
          }
        ],
        "example": "@Timestamp()",
        "exampleValues": [
          "1653432546438"
        ]
      }
    ],
    "parameters": [
      {
        "name": "unix",
        "description": "false，生成包含毫秒值的系统时间戳，设置成 true 时生成 Unix 时间戳，即自1970年1月1日00:00:00 UTC以来经过的秒数"
      }
    ],
    "order": 201
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.date.MLocaleTime",
    "name": "@LocaleTime()",
    "description": "生成本地化的当前时间",
    "tags": [
      "日期与时间"
    ],
    "constructors": [
      {
        "instance": "@LocaleTime()",
        "description": "生成当前时间，格式为HH:mm:ss，时区为Asia/Shanghai",
        "example": "@LocaleTime()",
        "exampleValues": [
          "23:32:13",
          "23:32:13"
        ]
      },
      {
        "instance": "@LocaleTime(format)",
        "description": "生成当前时间，格式为format，时区为Asia/Shanghai",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “HH:mm:ss”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          }
        ],
        "example": "@LocaleTime(a HH:mm:ss)",
        "exampleValues": [
          "下午 23:34:25",
          "下午 23:34:25"
        ]
      },
      {
        "instance": "@LocaleTime(format,random)",
        "description": "生成随机时间，格式为format，时区为Asia/Shanghai",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “HH:mm:ss”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          },
          {
            "name": "random",
            "description": "生成一天内随机时间，默认 false"
          }
        ],
        "example": "@LocaleTime(a HH:mm:ss)",
        "exampleValues": [
          "下午 23:34:25",
          "下午 23:34:25"
        ]
      },
      {
        "instance": "@LocaleTime(format,zoneId,random)",
        "description": "生成随机时间，格式为format，时区为zoneId",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “HH:mm:ss”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          },
          {
            "name": "zoneId",
            "description": "时区 ID，默认值 “Asia/Shanghai”，详情请查看 Java [ZoneId](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)"
          },
          {
            "name": "random",
            "description": "生成一天内随机时间，默认 false"
          }
        ],
        "example": "@LocaleDate(HH:mm:ss,Asia/Tokyo)",
        "exampleValues": [
          "07:08:21",
          "07:08:21"
        ]
      }
    ],
    "parameters": [
      {
        "name": "format",
        "description": "日期格式化模版，默认格式 “HH:mm:ss”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
      },
      {
        "name": "zoneId",
        "description": "时区 ID，默认值 “Asia/Shanghai”，详情请查看 Java [ZoneId](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)"
      },
      {
        "name": "random",
        "description": "生成一天内随机时间，默认 false"
      }
    ],
    "order": 202
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.date.MLocaleDate",
    "name": "@LocaleDate()",
    "description": "生成本地化的当前日期",
    "tags": [
      "日期与时间"
    ],
    "constructors": [
      {
        "instance": "@LocaleDate()",
        "description": "生成当前日期，格式为yyyy-MM-dd，时区为Asia/Shanghai",
        "example": "@LocaleDate()",
        "exampleValues": [
          "2022-01-01",
          "2022-01-01"
        ]
      },
      {
        "instance": "@LocaleDate(format)",
        "description": "生成当前日期，格式为format,时区为Asia/Shanghai",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “yyyy-MM-dd”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          }
        ],
        "example": "@LocaleDate(yyyy yy y MM M dd d)",
        "exampleValues": [
          "2022 22 2022 05 5 12 12",
          "2022 22 2022 05 5 12 12"
        ]
      },
      {
        "instance": "@LocaleDate(format,random)",
        "description": "生成随机日期，格式为format,时区为Asia/Shanghai",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “yyyy-MM-dd”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          },
          {
            "name": "random",
            "description": "生成过去10年和未来10年的随机日期，默认 false"
          }
        ],
        "example": "@LocaleDate(yyyy yy y MM M dd d)",
        "exampleValues": [
          "2022 22 2022 05 5 12 12",
          "2022 22 2022 05 5 12 12"
        ]
      },
      {
        "instance": "@LocaleDate(format,zoneId,random)",
        "description": "生成随机日期，格式为format，时区为zoneId",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “yyyy-MM-dd”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          },
          {
            "name": "zoneId",
            "description": "时区 ID，默认值 “Asia/Shanghai”，详情请查看 Java [ZoneId](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)"
          },
          {
            "name": "random",
            "description": "生成过去10年和未来10年的随机日期，默认 false"
          }
        ],
        "example": "@LocaleDate(yyyy-MM-dd,Asia/Shanghai)",
        "exampleValues": [
          "2022-01-01",
          "2022-01-01"
        ]
      }
    ],
    "parameters": [
      {
        "name": "format",
        "description": "日期格式化模版，默认格式 “yyyy-MM-dd”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
      },
      {
        "name": "zoneId",
        "description": "时区 ID，默认值 “Asia/Shanghai”，详情请查看 Java [ZoneId](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)"
      },
      {
        "name": "random",
        "description": "生成过去10年和未来10年的随机日期，默认 false"
      }
    ],
    "order": 203
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.date.MLocaleDateTime",
    "name": "@LocaleDateTime()",
    "description": "生成本地化的当前日期时间",
    "tags": [
      "日期与时间"
    ],
    "constructors": [
      {
        "instance": "@LocaleDateTime()",
        "description": "生成当前日期和时间，格式为yyyy-MM-dd HH:mm:ss，时区为Asia/Shanghai",
        "example": "@LocaleDateTime()",
        "exampleValues": [
          "2022-01-01 23:34:25",
          "2022-01-01 23:34:25"
        ]
      },
      {
        "instance": "@LocaleDateTime(format)",
        "description": "生成当前日期和时间，格式为format，时区为Asia/Shanghai",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “yyyy-MM-dd HH:mm:ss”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          }
        ],
        "example": "@LocaleDateTime(yy-MM-dd a HH:mm:ss)",
        "exampleValues": [
          "22-05-12 下午 23:40:22",
          "22-05-12 下午 23:40:22"
        ]
      },
      {
        "instance": "@LocaleDateTime(format,random)",
        "description": "生成随机日期和时间，格式为format，时区为Asia/Shanghai",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “yyyy-MM-dd HH:mm:ss”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          },
          {
            "name": "random",
            "description": "生成过去10年和未来10年随机日期时间，默认 false"
          }
        ],
        "example": "@LocaleDateTime(yy-MM-dd a HH:mm:ss)",
        "exampleValues": [
          "22-05-12 下午 23:40:22",
          "22-05-12 下午 23:40:22"
        ]
      },
      {
        "instance": "@LocaleDateTime(format,zoneId,random)",
        "description": "生成随机日期和时间，格式为format，时区为zoneId",
        "parameters": [
          {
            "name": "format",
            "description": "日期格式化模版，默认格式 “yyyy-MM-dd HH:mm:ss”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
          },
          {
            "name": "zoneId",
            "description": "时区 ID，默认值 “Asia/Shanghai”，详情请查看 Java [ZoneId](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)"
          },
          {
            "name": "random",
            "description": "生成过去10年和未来10年随机日期时间，默认 false"
          }
        ],
        "example": "@LocaleDateTime(yyyy-MM-dd HH:mm:ss,Asia/Shanghai)",
        "exampleValues": [
          "2022-01-01 23:34:25",
          "2022-01-01 23:34:25"
        ]
      }
    ],
    "parameters": [
      {
        "name": "format",
        "description": "日期格式化模版，默认格式 “yyyy-MM-dd HH:mm:ss”，详情请查看 Java [DateTimeFormatter](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html) 实现"
      },
      {
        "name": "zoneId",
        "description": "时区 ID，默认值 “Asia/Shanghai”，详情请查看 Java [ZoneId](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)"
      },
      {
        "name": "random",
        "description": "生成过去10年和未来10年随机日期时间，默认 false"
      }
    ],
    "order": 204
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.date.MMonth",
    "name": "@Month()",
    "description": "生成随机月份",
    "tags": [
      "日期与时间"
    ],
    "constructors": [
      {
        "instance": "@Month()",
        "description": "默认生成随机中文月份",
        "example": "@Month()",
        "exampleValues": [
          "一月"
        ]
      },
      {
        "instance": "@Month(locale)",
        "description": "生成一个月份，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Month()",
        "exampleValues": [
          "January"
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 272
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.date.MWeek",
    "name": "@Week()",
    "description": "生成随机星期",
    "tags": [
      "日期与时间"
    ],
    "constructors": [
      {
        "instance": "@Week()",
        "description": "默认生成随机中文星期",
        "example": "@Week()",
        "exampleValues": [
          "星期二"
        ]
      },
      {
        "instance": "@Week(locale)",
        "description": "生成一个星期，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Week()",
        "exampleValues": [
          "Tuesday"
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 273
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.id.MGuid",
    "name": "@Guid()",
    "description": "基于GUID算法生成ID标识",
    "tags": [
      "ID生成"
    ],
    "constructors": [
      {
        "instance": "@Guid()",
        "description": "基于GUID算法生成没有分隔符ID",
        "example": "@Guid()",
        "exampleValues": [
          "JIDLOIFIUDASNVHDLODGHYGONLKDHKP"
        ]
      },
      {
        "instance": "@Guid(withoutSeparator)",
        "description": "基于GUID算法生成包含\"-\"分隔符的ID",
        "parameters": [
          {
            "name": "withoutSeparator",
            "description": "布尔值，控制是否包含分割符号\"-\"，true 展示分割符，false 不展示分割符，默认 true"
          }
        ],
        "example": "@Guid(true)",
        "exampleValues": [
          "JIDLO-IFIUD-ASNVH-DLODG-HYGON-LKDHKP"
        ]
      }
    ],
    "parameters": [
      {
        "name": "withoutSeparator",
        "description": "布尔值，控制是否包含分割符号\"-\"，true 展示分割符，false 不展示分割符，默认 true"
      }
    ],
    "order": 301
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.id.MUuid",
    "name": "@Uuid()",
    "description": "基于UUID算法生成ID标识",
    "tags": [
      "ID生成"
    ],
    "constructors": [
      {
        "instance": "@Uuid()",
        "description": "基于UUID算法生成没有分隔符ID",
        "example": "@Uuid()",
        "exampleValues": [
          "JIDLOIFIUDASNVHDLODGHYGONLKDHKP"
        ]
      },
      {
        "instance": "@Uuid(withoutSeparator)",
        "description": "基于UUID算法生成包含\"-\"分隔符的ID",
        "parameters": [
          {
            "name": "withoutSeparator",
            "description": "布尔值，控制是否包含分割符号\"-\"，true 展示分割符，false 不展示分割符，默认 true"
          }
        ],
        "example": "@Uuid(true)",
        "exampleValues": [
          "JIDLO-IFIUD-ASNVH-DLODG-HYGON-LKDHKP"
        ]
      }
    ],
    "parameters": [
      {
        "name": "withoutSeparator",
        "description": "布尔值，控制是否包含分割符号\"-\"，true 展示分割符，false 不展示分割符，默认 true"
      }
    ],
    "order": 302
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.id.MIncId",
    "name": "@IncId()",
    "description": "基于自增生成ID标识（单节点不重复）",
    "tags": [
      "ID生成"
    ],
    "constructors": [
      {
        "instance": "@IncId()",
        "description": "生成一个自增ID，初始化值为1，自增步长为1",
        "example": "@IncId()",
        "exampleValues": [
          "1"
        ]
      },
      {
        "instance": "@IncId(init,step)",
        "description": "生成一个自增ID，初始化值为init，自增步长为step",
        "parameters": [
          {
            "name": "init",
            "description": "初始化值，默认从 1 开始"
          },
          {
            "name": "step",
            "description": "自增步长，默认每次加 1"
          }
        ],
        "example": "@IncId(5,2)",
        "exampleValues": [
          "5"
        ]
      }
    ],
    "parameters": [
      {
        "name": "init",
        "description": "初始化值，默认从 1 开始"
      },
      {
        "name": "step",
        "description": "自增步长，默认每次加 1"
      }
    ],
    "order": 303
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.id.MSnowId",
    "name": "@SnowId()",
    "description": "基于SnowFlake算法生成ID标识（分布式不重复）",
    "tags": [
      "ID生成"
    ],
    "constructors": [
      {
        "instance": "@SnowId()",
        "description": "基于SnowFlake算法生成ID，默认数据中心ID为1、机器ID为1",
        "example": "@SnowId()",
        "exampleValues": [
          "16685359784"
        ]
      },
      {
        "instance": "@SnowId(dcId,mid)",
        "description": "基于SnowFlake算法生成ID，数据中心ID为指定dcId，机器ID为指定mid",
        "parameters": [
          {
            "name": "dcId",
            "description": "数据中心 ID 标识，默认 1"
          }
        ],
        "example": "@SnowId(1,1)",
        "exampleValues": [
          "16685359784"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dcId",
        "description": "数据中心 ID 标识，默认 1"
      },
      {
        "name": "mId",
        "description": "机器 ID 标识，默认 1，多节点分布式压测时根据压测节点自动设置机器 ID"
      }
    ],
    "order": 304
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.article.MWord",
    "name": "@Word()",
    "description": "生成单词",
    "tags": [
      "文本文案"
    ],
    "constructors": [
      {
        "instance": "@Word()",
        "description": "生成一个单词，语言默认中文，字典使用默认，默认支持 100 个词",
        "example": "@Word()",
        "exampleValues": [
          "弯弯曲曲",
          "千家万户"
        ]
      },
      {
        "instance": "@Word(dict)",
        "description": "生成一个单词，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Word(开开心心|快快乐乐|红红火火))",
        "exampleValues": [
          "开开心心",
          "快快乐乐"
        ]
      },
      {
        "instance": "@Word(locale)",
        "description": "生成一个单词，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Word(en)",
        "exampleValues": [
          "along",
          "designer"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 401
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.article.MTitle",
    "name": "@Title()",
    "description": "生成标题",
    "tags": [
      "文本文案"
    ],
    "constructors": [
      {
        "instance": "@Title()",
        "description": "生成一个标题，语言默认中文，字典使用默认，单个标题 2-20 个字符，默认支持 100 个标题",
        "example": "@Title()",
        "exampleValues": [
          "做好疫情防护"
        ]
      },
      {
        "instance": "@Title(dict)",
        "description": "生成一个标题，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Title(做好疫情防护|乌俄局势)",
        "exampleValues": [
          "做好疫情防护"
        ]
      },
      {
        "instance": "@Title(locale)",
        "description": "生成一个标题，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Title(en)",
        "exampleValues": [
          "Do a good job in epidemic prevention"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 402
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.article.MSentence",
    "name": "@Sentence()",
    "description": "生成句子",
    "tags": [
      "文本文案"
    ],
    "constructors": [
      {
        "instance": "@Sentence()",
        "description": "生成一个句子，语言默认中文，字典使用默认，默认句子长度 5-100 个字符，默认支持 50 个语句",
        "example": "@Sentence()",
        "exampleValues": [
          "好好学习"
        ]
      },
      {
        "instance": "@Sentence(dict)",
        "description": "生成一个句子，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Sentence(好好学习|天天向上)",
        "exampleValues": [
          "天天向上"
        ]
      },
      {
        "instance": "@Sentence(locale)",
        "description": "生成一个句子，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Sentence(zh_CN)",
        "exampleValues": [
          "好好学习"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 403
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.article.MTangPoetry",
    "name": "@TangPoetry()",
    "description": "生成唐诗",
    "tags": [
      "文本文案"
    ],
    "constructors": [
      {
        "instance": "@TangPoetry()",
        "description": "生成一个唐诗，语言默认中文，字典使用默认，默认支持 100 首",
        "example": "@TangPoetry()",
        "exampleValues": [
          "柳宗元\n晨诣超师院读禅经\n汲井漱寒齿，清心拂尘服，\n闲持贝叶书，步出东斋读。\n真源了无取，忘迹世所逐；\n遗言冀可冥，缮性何由熟？\n道人庭宇静，苔色连深竹；\n日出雾露余，青松如膏沐。\n澹然离言说，悟悦心自足。",
          "韦应物\n兵卫森画戟，宴寝凝清香。\n海上风雨至，逍遥池阁凉。\n烦疴近消散，嘉宾复满堂。\n自惭居处崇，未睹斯民康。\n理会是非遣，性达形迹忘。\n鲜肥属时禁，蔬果幸见尝。\n俯饮一杯酒，仰聆金玉章。\n神欢体自轻，意欲凌风翔。\n吴中盛文史，群彦今汪洋。\n方知大藩地，岂曰财赋强。"
        ]
      },
      {
        "instance": "@TangPoetry(dict)",
        "description": "生成一个唐诗，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@TangPoetry(唐诗1|唐诗2)",
        "exampleValues": [
          "唐诗1",
          "唐诗2"
        ]
      },
      {
        "instance": "@TangPoetry(locale)",
        "description": "生成一个唐诗，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@TangPoetry(en)",
        "exampleValues": [
          "Qiu Wei\nAFTER MISSING THE RECLUSE \nON THE WESTERN MOUNTAIN\nTo your hermitage here on the top of the mountain \nI have climbed, without stopping, these ten miles. \nI have knocked at your door, and no one answered; \nI have peeped into your room, at your seat beside the table. \nPerhaps you are out riding in your canopied chair, \nOr fishing, more likely, in some autumn pool. \nSorry though I am to be missing you, \nYou have become my meditation -- \nThe beauty of your grasses, fresh with rain, \nAnd close beside your window the music of your pines. \nI take into my being all that I see and hear, \nSoothing my senses, quieting my heart; \nAnd though there be neither host nor guest, \nHave I not reasoned a visit complete? \n...After enough, I have gone down the mountain. \nWhy should I wait for you any longer? ",
          "Wang Wei\nAT PARTING\nI dismount from my horse and I offer you wine, \nAnd I ask you where you are going and why. \nAnd you answer: \"I am discontent \nAnd would rest at the foot of the southern mountain. \nSo give me leave and ask me no questions. \nWhite clouds pass there without end.\" "
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 404
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.article.MParagraph",
    "name": "@Paragraph()",
    "description": "生成段落",
    "tags": [
      "文本文案"
    ],
    "constructors": [
      {
        "instance": "@Paragraph()",
        "description": "生成一个段落，语言默认中文，字典使用默认，默认段落长度 200-1000 个字符，默认支持 100 个段落",
        "example": "@Paragraph()",
        "exampleValues": [
          "喜欢读诗，不管它是中国的还是外国的，也不管它是古代的还是现代的都爱读。从风格上来说不管它是豪放的还纤柔的，也不管它是浪漫的还是写实的我也同样爱读。因为我认为诗是大自然灵魂精神的体现，诗是社会的律动，诗是人思想意识真情实感的流露。喜欢诗，喜欢读诗，时间一长，也就喜欢练习写诗。古体诗，格律诗，词曲到新诗都学习过，也写过；虽然写得不好，可还是也写了，尝试了。",
          "夜，宛若一副带着点点诗意的画卷，铺展开来。不知道从何时起，喜欢独处，喜欢一个人坐着，纵然对着夜色，是无数的孤独，也深觉挺好。孤独何妨呢?不被打扰，也是一种美丽的享受。无聊时候，敲几行贴心的小字，沉迷夜色的清然与优柔之中。静坐的时光，总有往昔的故事，如同电影一样心头回放，那些曾经的人，那些渐远渐无书的你我，而如今形同陌路了，唯有残留的往事，像是爬满心房的藤蔓，无休无止。"
        ]
      },
      {
        "instance": "@Paragraph(dict)",
        "description": "生成一个段落，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Paragraph(段落1|段落2)",
        "exampleValues": [
          "段落1",
          "段落2"
        ]
      },
      {
        "instance": "@Paragraph(locale)",
        "description": "生成一个段落，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Paragraph(en)",
        "exampleValues": [
          "At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting. The time is gone, the promise is still there, the people are gone, like the arrow from the mstring, even if it is far to the horizon, the tender words are still there. If the affection is deep, I am not afraid of the long-term, having you in my heart is enough to comfort a lonely soul. The cymbals were pale that day, the white dew was frost, and the autumn breeze brought coolness. Xia came quietly, and went quietly. The autumn models came with graceful and graceful steps, lovingly sending the back of Xia Yuan, accompanied by fallen leaves, waiting for the arrival of the next season. Looking at the withered leaves, knowing that some departures are unobstructed, and the empty heart will be filled with the tranquility of the autumn light, so the parting time and time will be warmed by the next meeting.",
          "accidentally met and met. You are over there. I am here. A virtual thread connects us together. We could have become friends, communicate, talk, and sigh. However, we have been indulged in real life for too long. In this masked society, we have lost the most precious and simplest relationship between people-trust!"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 405
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.article.MArticle",
    "name": "@Article()",
    "description": "生成文章",
    "tags": [
      "文本文案"
    ],
    "constructors": [
      {
        "instance": "@Article()",
        "description": "生成默认3个段落，长度800字内中文文章",
        "example": "@Article()",
        "exampleValues": [
          "有时我们是主角，有时我们是配角，但无论角色如何，我们都在努力地活着，追求着自己的梦想。 未来会怎样？ 有时我们是主角，有时我们是配角，但无论角色如何，我们都在努力地活着，追求着自己的梦想。 静坐的时光，总有往昔的故事，如同电影一样心头回放，那些曾经的人，那些渐远渐无书的你我，而如今形同陌路了，唯有残留的往事，像是爬满心房的藤蔓，无休无止。 科技的发展改变了我们的生活方式。\n\n从风格上来说不管它是豪放的还纤柔的，也不管它是浪漫的还是写实的我也同样爱读。 静坐的时光，总有往昔的故事，如同电影一样心头回放，那些曾经的人，那些渐远渐无书的你我，而如今形同陌路了，唯有残留的往事，像是爬满心房的藤蔓，无休无止。 从风格上来说不管它是豪放的还纤柔的，也不管它是浪漫的还是写实的我也同样爱读。 喜欢诗，喜欢读诗，时间一长，也就喜欢练习写诗。\n\n不被打扰，也是一种美丽的享受。 喜欢诗，喜欢读诗，时间一长，也就喜欢练习写诗。 孤独何妨呢? 从互联网到人工智能，从智能手机到智能家居，科技正在以前所未有的速度改变着我们的世界。 春天来了，万物复苏。"
        ]
      },
      {
        "instance": "@Article(locale)",
        "description": "生成指定语言默认3个段落，长度800字内中文文章",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Article(en)",
        "exampleValues": [
          "The time is gone, the promise is still there, the people are gone, like the arrow from the mstring, even if it is far to the horizon, the tender words are still there.  You are over there. At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting.  I am here.\n\nAt this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting.  Looking at the withered leaves, knowing that some departures are unobstructed, and the empty heart will be filled with the tranquility of the autumn light, so the parting time and time will be warmed by the next meeting.  We could have become friends, communicate, talk, and sigh.\n\nIf the affection is deep, I am not afraid of the long-term, having you in my heart is enough to comfort a lonely soul.  You are over there.  Accidentally met and met.  If the affection is deep, I am not afraid of the long-term, having you in my heart is enough to comfort a lonely soul."
        ]
      },
      {
        "instance": "@Article(paragraphCount,wordCount,dict)",
        "description": "基于指定段落、字数和内容生成文章",
        "parameters": [
          {
            "name": "paragraphCount",
            "description": "生成段落数"
          },
          {
            "name": "wordCount",
            "description": "最大字数"
          }
        ],
        "example": "@Paragraph(2|200|At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting.)",
        "exampleValues": [
          "At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting. At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting. At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting. At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting.\n\nAt this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting. At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting. At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting."
        ]
      },
      {
        "instance": "@Article(paragraphCount,wordCount,locale)",
        "description": "基于指定段落、字数和语言生成文章",
        "parameters": [
          {
            "name": "paragraphCount",
            "description": "生成段落数"
          },
          {
            "name": "wordCount",
            "description": "最大字数"
          },
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Article(2|200|en)",
        "exampleValues": [
          "At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting.  I am here. The time is gone, the promise is still there, the people are gone, like the arrow from the mstring, even if it is far to the horizon, the tender words are still there.  The autumn models came with graceful and graceful steps, lovingly sending the back of Xia Yuan, accompanied by fallen leaves, waiting for the arrival of the next season.\n\nXia came quietly, and went quietly.  Xia came quietly, and went quietly. At this moment, you are so far away, just like the summer that went away, there is no longer the enthusiasm of the past, it seems that we are all used to such a quiet parting."
        ]
      }
    ],
    "parameters": [
      {
        "name": "paragraphCount",
        "description": "生成段落数"
      },
      {
        "name": "wordCount",
        "description": "最大字数"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 406
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.geography.MCountry",
    "name": "@Country()",
    "description": "生成国家（基于 ISO 3166-1 标准）",
    "tags": [
      "地理信息"
    ],
    "constructors": [
      {
        "instance": "@Country()",
        "description": "生成一个国家，语言默认中文，字典使用默认",
        "example": "@Country()",
        "exampleValues": [
          "中国"
        ]
      },
      {
        "instance": "@Country(dict)",
        "description": "生成一个国家，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Country(中国,俄罗斯)",
        "exampleValues": [
          "中国"
        ]
      },
      {
        "instance": "@Country(locale)",
        "description": "生成一个国家，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Country(zh_CN)",
        "exampleValues": [
          "中国"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 501
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.geography.MProvince",
    "name": "@Province()",
    "description": "生成省份",
    "tags": [
      "地理信息"
    ],
    "constructors": [
      {
        "instance": "@Province()",
        "description": "生成一个省份，语言默认中文，字典使用默认",
        "example": "@Province()",
        "exampleValues": [
          "山东",
          "河北"
        ]
      },
      {
        "instance": "@Province(dict)",
        "description": "生成一个省份，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Province(山西,河北,北京,上海)",
        "exampleValues": [
          "北京",
          "上海"
        ]
      },
      {
        "instance": "@Province(locale)",
        "description": "生成一个省份，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Province(en)",
        "exampleValues": [
          "U.S.",
          "U.K."
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 502
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.geography.MCity",
    "name": "@City()",
    "description": "生成城市",
    "tags": [
      "地理信息"
    ],
    "constructors": [
      {
        "instance": "@City()",
        "description": "生成一个城市，语言默认中文，字典使用默认",
        "exampleValues": [
          "北京",
          "上海"
        ]
      },
      {
        "instance": "@City(dict)",
        "description": "生成一个城市，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Word(北京|深圳|上海))",
        "exampleValues": [
          "深圳",
          "上海"
        ]
      },
      {
        "instance": "@City(locale)",
        "description": "生成一个城市，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@City(en)",
        "exampleValues": [
          "Chicago",
          "New York"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 503
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.geography.MAddress",
    "name": "@Address()",
    "description": "生成地址",
    "tags": [
      "地理信息"
    ],
    "constructors": [
      {
        "instance": "@Address()",
        "description": "生成一个地址，语言默认中文，字典使用默认",
        "example": "@Address()",
        "exampleValues": [
          "恩施土家族苗族自治州利川市",
          "上海市浦东新区迎宾大道6000号"
        ]
      },
      {
        "instance": "@Address(dict)",
        "description": "生成一个地址，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Address(地址1|地址2|地址3))",
        "exampleValues": [
          "地址3",
          "地址1"
        ]
      },
      {
        "instance": "@Address(locale)",
        "description": "生成一个地址，语言使用指定的locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Address(en)",
        "exampleValues": [
          "1112 Hermitage Rd NW, Edmonton, AB T5A 4M4",
          "Gangwon-do, Yeongweol, Yeongwol-eup, Hasong-ri, 217-2"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 504
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.geography.MLatitude",
    "name": "@Latitude()",
    "description": "生成随机纬度坐标值",
    "tags": [
      "地理信息"
    ],
    "constructors": [
      {
        "instance": "@Latitude()",
        "description": "生成一个纬度坐标值，默认的范围随机的纬度坐标值，如：39.910981",
        "example": "@Latitude()",
        "exampleValues": [
          "90.232121"
        ]
      },
      {
        "instance": "@Latitude(minLat,maxLat,scale,nullWeight)",
        "description": "生成一个纬度坐标值，按指定的minLat、maxLat、scale、nullWeight条件生成纬度坐标值",
        "parameters": [
          {
            "name": "minLat",
            "description": "最小纬度，最小值 -90"
          },
          {
            "name": "maxLat",
            "description": "最大纬度，最大值 +90"
          },
          {
            "name": "scale",
            "description": "精度，即小数点后保留的位数（int类型）"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Latitude(30,60,5,1:2)",
        "exampleValues": [
          "40.336546"
        ]
      }
    ],
    "parameters": [
      {
        "name": "minLat",
        "description": "最小纬度，最小值 -90"
      },
      {
        "name": "maxLat",
        "description": "最大纬度，最大值 +90"
      },
      {
        "name": "scale",
        "description": "精度，即小数点后保留的位数（int类型）"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 511
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.geography.MLongitude",
    "name": "@Longitude()",
    "description": "生成随机经度坐标值",
    "tags": [
      "地理信息"
    ],
    "constructors": [
      {
        "instance": "@Longitude()",
        "description": "生成一个经度坐标值，默认的范围随机的经度坐标值，如：116.41366",
        "example": "@Longitude()",
        "exampleValues": [
          "90.232121"
        ]
      },
      {
        "instance": "@Longitude(minLng,maxLng,scale,nullWeight)",
        "description": "生成一个经度坐标值，按指定的minLng、maxLng、scale、nullWeight条件生成经度坐标值",
        "parameters": [
          {
            "name": "minLng",
            "description": "最小经度，最小值 -180 （double类型）"
          },
          {
            "name": "maxLng",
            "description": "最大经度，最大值 +180"
          },
          {
            "name": "scale",
            "description": "精度，即小数点后保留的位数（int类型）"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Longitude(30,60,5,1:2)",
        "exampleValues": [
          "40.336546"
        ]
      }
    ],
    "parameters": [
      {
        "name": "minLng",
        "description": "最小经度，最小值 -180 （double类型）"
      },
      {
        "name": "maxLng",
        "description": "最大经度，最大值 +180"
      },
      {
        "name": "scale",
        "description": "精度，即小数点后保留的位数（int类型）"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 512
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.geography.MCoordinates",
    "name": "@Coordinates()",
    "description": "生成随机经纬度坐标值，格式：(经度,纬度)",
    "tags": [
      "地理信息"
    ],
    "constructors": [
      {
        "instance": "@Coordinates()",
        "description": "生成一个经纬度坐标值，默认的范围随机的经纬度坐标",
        "example": "@Coordinates()",
        "exampleValues": [
          "20.336546,90.232121"
        ]
      },
      {
        "instance": "@Coordinates(minLng,maxLng,minLat,maxLat,scale,nullWeight)",
        "description": "生成一个经纬度坐标值，按指定的minLng、maxLng、minLat、maxLat、scale、nullWeight条件生成经纬度坐标",
        "parameters": [
          {
            "name": "minLng",
            "description": "最小经度，最小值 -180 （double类型）"
          },
          {
            "name": "maxLng",
            "description": "最大经度，最大值 +180"
          },
          {
            "name": "minLat",
            "description": "最小纬度，最小值 -90"
          },
          {
            "name": "maxLat",
            "description": "最大纬度，最大值 +90"
          },
          {
            "name": "scale",
            "description": "精度，即小数点后保留的位数（int类型）"
          },
          {
            "name": "nullWeight",
            "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
          }
        ],
        "example": "@Coordinates(30,60,100,160,5,1:2)",
        "exampleValues": [
          "40.336546,110.232121"
        ]
      }
    ],
    "parameters": [
      {
        "name": "minLng",
        "description": "最小经度，最小值 -180 （double类型）"
      },
      {
        "name": "maxLng",
        "description": "最大经度，最大值 +180"
      },
      {
        "name": "minLat",
        "description": "最小纬度，最小值 -90"
      },
      {
        "name": "maxLat",
        "description": "最大纬度，最大值 +90"
      },
      {
        "name": "scale",
        "description": "精度，即小数点后保留的位数（int类型）"
      },
      {
        "name": "nullWeight",
        "description": "为空(null)比例，如“1:2”表示生成随机值3次平均1次为null"
      }
    ],
    "order": 513
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.geography.MZip",
    "name": "@Zip()",
    "description": "生成邮政编码",
    "tags": [
      "地理信息"
    ],
    "constructors": [
      {
        "instance": "@Zip(locale)",
        "description": "生成一个邮政编码，语言使用指定的locale",
        "example": "@Zip(en)",
        "exampleValues": [
          "EC1A 1HQ",
          "1ASA 9AA",
          "1BSA 4AB"
        ]
      },
      {
        "instance": "@Zip()",
        "description": "生成一个邮政编码，语言默认中文，字典使用默认",
        "example": "@Zip()",
        "exampleValues": [
          "252863",
          "252665",
          "1252866"
        ]
      },
      {
        "instance": "@Zip(dict)",
        "description": "生成一个邮政编码，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "邮政编码字典，不指定时将使用默认字典\n- 中国区域默认（30 个）：252867|252866|252865|252864|252863|252862|252861|252800|252666|252665|252662|252661|252660|252659|252658|252657|252656|252655|252654|252653|102208|102206|102205|102204|102202|102200|101414|101413|101412|101411\n- 英国区域默认（20 个）：AGA 9AA|1AHA 4ZZ|1AJA 9AA|1ALA 5BQ|1ANA B10|1APA B10|1AQA 5BQ|1ARA B10|1ASA 9AA|1AUA 4ZZ|1AWA B10|1AXA B10|1BAA 4ZZ|1BBA 1HQ|1BDA B10|1BFA B10|1BHA 1HQ|1BRA 5BQ|1BSA 4AB|EC1A 1HQ"
          }
        ],
        "example": "@Zip(101407|101406|101405)",
        "exampleValues": [
          "101407",
          "101405",
          "101406"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "邮政编码字典，不指定时将使用默认字典\n- 中国区域默认（30 个）：252867|252866|252865|252864|252863|252862|252861|252800|252666|252665|252662|252661|252660|252659|252658|252657|252656|252655|252654|252653|102208|102206|102205|102204|102202|102200|101414|101413|101412|101411\n- 英国区域默认（20 个）：AGA 9AA|1AHA 4ZZ|1AJA 9AA|1ALA 5BQ|1ANA B10|1APA B10|1AQA 5BQ|1ARA B10|1ASA 9AA|1AUA 4ZZ|1AWA B10|1AXA B10|1BAA 4ZZ|1BBA 1HQ|1BDA B10|1BFA B10|1BHA 1HQ|1BRA 5BQ|1BSA 4AB|EC1A 1HQ"
      }
    ],
    "order": 520
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.hash.MMd5",
    "name": "@Md5()",
    "description": "生成随机MD5值",
    "tags": [
      "哈希算法"
    ],
    "constructors": [
      {
        "instance": "@Md5()",
        "description": "生成一个MD5 值，长度默认为32",
        "example": "@Md5()",
        "exampleValues": [
          "E2FC714C4727EE9395F324CD2E7F331F"
        ]
      },
      {
        "instance": "@Md5(length)",
        "description": "生成一个MD5 值，长度使用指定的length",
        "parameters": [
          {
            "name": "length",
            "description": "摘要长度，固定值：16、32，默认 32"
          }
        ],
        "example": "@Md5(16)",
        "exampleValues": [
          "4727EE9395F324CD"
        ]
      }
    ],
    "parameters": [
      {
        "name": "length",
        "description": "摘要长度，固定值：16、32，默认 32"
      }
    ],
    "order": 601
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.hash.MSha",
    "name": "@Sha()",
    "description": "生成随机哈希值",
    "tags": [
      "哈希算法"
    ],
    "constructors": [
      {
        "instance": "@Sha()",
        "description": "生成一个随机哈希值，版本默认SHA-512",
        "example": "@Sha()",
        "exampleValues": [
          "85433ab2b5841aaced05816705ff434f4df037829ed425de03ba80e636a826d020a4e954e4f69c2cfe57abc7751bdcc9d27dc89c286b8567934f01a467221169",
          "91701de028f41ddc5319e31c21b3453ca0653cdaf1dfe410b43da0cdf5a0218053f0f0034ff696367b741a51dcc028c6676403f52955e78bc66bd49abe99ab95"
        ]
      },
      {
        "instance": "@Sha(version)",
        "description": "生成一个随机哈希值，版本使用指定的version",
        "parameters": [
          {
            "name": "version",
            "description": "算法版本，固定值：SHA-1、SHA-224、SHA-256、SHA-384、SHA-512，默认 SHA-512"
          }
        ],
        "example": "@Word(SHA-224)",
        "exampleValues": [
          "21bca972707548ae0ffac10d2fed7495e51cb62f48b31e5edd4eb257",
          "ad7cdf3b66e8d68c22ce4750557e4f7c3af1a199fd11193dfbfa1e41"
        ]
      }
    ],
    "parameters": [
      {
        "name": "version",
        "description": "算法版本，固定值：SHA-1、SHA-224、SHA-256、SHA-384、SHA-512，默认 SHA-512"
      }
    ],
    "order": 602
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.locale.MLocale",
    "name": "@Locale()",
    "description": "生成国际化配置，包括语言和国家区域",
    "tags": [
      "本地化"
    ],
    "constructors": [
      {
        "instance": "@Locale()",
        "description": "生成一个国际化配置，包括语言和国家区域",
        "example": "@Locale()",
        "exampleValues": [
          "zh_CN"
        ]
      },
      {
        "instance": "@Locale(joiner)",
        "description": "生成一个国际化配置，包括语言和国家区域，连接符使用joiner",
        "parameters": [
          {
            "name": "joiner",
            "description": "国家和语言连接符.支持一个字符,默认使用 \"_\""
          }
        ],
        "example": "@Locale(-)",
        "exampleValues": [
          "zh-CN"
        ]
      }
    ],
    "parameters": [
      {
        "name": "joiner",
        "description": "国家和语言连接符.支持一个字符,默认使用 \"_\""
      }
    ],
    "order": 701
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.locale.MTimeZone",
    "name": "@TimeZone()",
    "description": "生成国际化时区",
    "tags": [
      "本地化"
    ],
    "constructors": [
      {
        "instance": "@TimeZone()",
        "description": "生成一个国际化时区",
        "example": "@TimeZone()",
        "exampleValues": [
          "Australia/Darwin",
          "Africa/Cairo",
          "Europe/Paris"
        ]
      },
      {
        "instance": "@TimeZone(dict)",
        "description": "生成一个国际化时区，区域字典使用dict",
        "parameters": [
          {
            "name": "dict",
            "description": "区域字典，多个区域“|”分割，默认值：Australia/Darwin|Australia/Sydney|America/Argentina/Buenos_Aires|Africa/Cairo|America/Anchorage|America/Sao_Paulo|Asia/Dhaka|Africa/Harare|America/St_Johns|America/Chicago|Asia/Shanghai|Africa/Addis_Ababa|Europe/Paris|America/Indiana/Indianapolis|Asia/Kolkata|Asia/Tokyo|Pacific/Apia|Asia/Yerevan|Pacific/Auckland|Asia/Karachi|America/Phoenix|America/Puerto_Rico|America/Los_Angeles|Pacific/Guadalcanal|Asia/Ho_Chi_Minh"
          }
        ],
        "example": "@TimeZone(Australia/Darwin|Australia/Sydney|America/Argentina/Buenos_Aires))",
        "exampleValues": [
          "Australia/Darwin",
          "America/Argentina/Buenos_Aires"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "区域字典，多个区域“|”分割，默认值：Australia/Darwin|Australia/Sydney|America/Argentina/Buenos_Aires|Africa/Cairo|America/Anchorage|America/Sao_Paulo|Asia/Dhaka|Africa/Harare|America/St_Johns|America/Chicago|Asia/Shanghai|Africa/Addis_Ababa|Europe/Paris|America/Indiana/Indianapolis|Asia/Kolkata|Asia/Tokyo|Pacific/Apia|Asia/Yerevan|Pacific/Auckland|Asia/Karachi|America/Phoenix|America/Puerto_Rico|America/Los_Angeles|Pacific/Guadalcanal|Asia/Ho_Chi_Minh"
      }
    ],
    "order": 702
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MAge",
    "name": "@Age()",
    "description": "生成用户的年龄",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Age()",
        "description": "生成一个用户的年龄",
        "example": "@String()",
        "exampleValues": [
          "60"
        ]
      },
      {
        "instance": "@Age(min,max)",
        "description": "生成一个用户的年龄，最小值为min，最大值为max",
        "parameters": [
          {
            "name": "min",
            "description": "年龄最大值，默认最小 0 岁，最大 100 岁"
          },
          {
            "name": "max",
            "description": "年龄最大值，默认最小 0 岁，最大 100 岁"
          }
        ],
        "example": "@String(1,50)",
        "exampleValues": [
          "25"
        ]
      }
    ],
    "parameters": [
      {
        "name": "min",
        "description": "年龄最大值，默认最小 0 岁，最大 100 岁"
      },
      {
        "name": "max",
        "description": "年龄最大值，默认最小 0 岁，最大 100 岁"
      }
    ],
    "order": 800
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MName",
    "name": "@Name()",
    "description": "生成用户姓名",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Name()",
        "description": "生成一个用户的姓氏，语言中文",
        "example": "@Name()",
        "exampleValues": [
          "郑倾宇",
          "何政贤"
        ]
      },
      {
        "instance": "@Name(dict)",
        "description": "生成一个用户的姓名，字典使用dict",
        "parameters": [
          {
            "name": "dict",
            "description": "名字字典，不指定时将使用 @Firstname() 和 @Lastname() 默认字典组合生成"
          }
        ],
        "example": "@Name(欧阳娜娜|贾玲)",
        "exampleValues": [
          "欧阳娜娜",
          "贾玲"
        ]
      },
      {
        "instance": "@Name(locale)",
        "description": "生成一个用户的姓名，语言使用locale,字典使用默认的",
        "parameters": [
          {
            "name": "locale",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Name(en)",
        "exampleValues": [
          "Chris Jack",
          "Abra Abel"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "名字字典，不指定时将使用 @Firstname() 和 @Lastname() 默认字典组合生成"
      },
      {
        "name": "locale",
        "description": "自定义值字典，多个值以“|”分割"
      }
    ],
    "order": 801
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MPassword",
    "name": "@Password()",
    "description": "生成指定强度随机密码",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Password()",
        "description": "生成一个随机密码，长度为6～20个字符,包含大写字母、小写字母、数据",
        "example": "@Passd()",
        "exampleValues": [
          "PKA1BGmN",
          "iD5p27p2w"
        ]
      },
      {
        "instance": "@Password(min,max)",
        "description": "生成一个随机密码，长度为指定的min～max个字符，包含大写字母、小写字母、数据",
        "parameters": [
          {
            "name": "min",
            "description": "密码最小长度，默认 6 个字符，最小允许 1 个字符"
          },
          {
            "name": "max",
            "description": "密码最大长度，默认 20 个字符，最大允许 65535 个字符"
          }
        ],
        "example": "@Passd(5,8)",
        "exampleValues": [
          "llbxB6Z",
          "qLQlgRz"
        ]
      },
      {
        "instance": "@Password(allowUpperCase,allowLowerCase,allowDigits,allowSpecialChar)",
        "description": "生成一个随机密码，长度为6～20个字符，包含指定的allowUpperCase、allowLowerCase、allowDigits、allowSpecialChar字符",
        "parameters": [
          {
            "name": "allowUpperCase",
            "description": "布尔值，是否允许大写字母，默认 true"
          },
          {
            "name": "allowLowerCase",
            "description": "布尔值，是否允许小写字母，默认 true"
          },
          {
            "name": "allowDigits",
            "description": "布尔值，是否允许数字，默认 true"
          },
          {
            "name": "allowSpecialChar",
            "description": "布尔值，是否允许特殊符号，默认 false，特殊字符包括：`-=[];',./~!@#$%^&*()_+{}:\"<>?"
          }
        ],
        "example": "@Passd(true,true,true,true)",
        "exampleValues": [
          "H/70~{E:nmB%e",
          "'KIJbW2DP`\\<s3b+ze"
        ]
      },
      {
        "instance": "@Password(min,max,allowUpperCase,allowLowerCase,allowDigits,allowSpecialChar)",
        "description": "生成一个随机密码，长度为min～max个字符，包含指定的allowUpperCase、allowLowerCase、allowDigits、allowSpecialChar字符",
        "parameters": [
          {
            "name": "min",
            "description": "密码最小长度，默认 6 个字符，最小允许 1 个字符"
          },
          {
            "name": "max",
            "description": "密码最大长度，默认 20 个字符，最大允许 65535 个字符"
          },
          {
            "name": "allowUpperCase",
            "description": "布尔值，是否允许大写字母，默认 true"
          },
          {
            "name": "allowLowerCase",
            "description": "布尔值，是否允许小写字母，默认 true"
          },
          {
            "name": "allowDigits",
            "description": "布尔值，是否允许数字，默认 true"
          },
          {
            "name": "allowSpecialChar",
            "description": "布尔值，是否允许特殊符号，默认 false，特殊字符包括：`-=[];',./~!@#$%^&*()_+{}:\"<>?"
          }
        ],
        "example": "@Passd(5,8,true,true,true,true)",
        "exampleValues": [
          "H-+:6",
          "@7^KQf8"
        ]
      }
    ],
    "parameters": [
      {
        "name": "min",
        "description": "密码最小长度，默认 6 个字符，最小允许 1 个字符"
      },
      {
        "name": "max",
        "description": "密码最大长度，默认 20 个字符，最大允许 65535 个字符"
      },
      {
        "name": "allowUpperCase",
        "description": "布尔值，是否允许大写字母，默认 true"
      },
      {
        "name": "allowLowerCase",
        "description": "布尔值，是否允许小写字母，默认 true"
      },
      {
        "name": "allowDigits",
        "description": "布尔值，是否允许数字，默认 true"
      },
      {
        "name": "allowSpecialChar",
        "description": "布尔值，是否允许特殊符号，默认 false，特殊字符包括：`-=[];',./~!@#$%^&*()_+{}:\"<>?"
      }
    ],
    "order": 802
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MFirstname",
    "name": "@Firstname()",
    "description": "生成用户的名字",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Firstname()",
        "description": "生成一个用户的名字，语言中文",
        "example": "@Firstname()",
        "exampleValues": [
          "紫沫",
          "超俊",
          "政晧"
        ]
      },
      {
        "instance": "@Firstname(dict)",
        "description": "生成一个用户的名字，字典使用dict",
        "parameters": [
          {
            "name": "dict",
            "description": "名字字典，不指定时将使用默认名字,默认名字（50 个）：薇薇|紫沫|韩薇|艾莉|冥雪|雨玄|容夜|倾宇|翼杉|七夜|羽熙|超俊|政贤|阳洛|洛夜|宇成|佑染|政晧|诩浩|相宇|傲然|桂花|建国|淑华|桂兰|淑兰|婷婷|秀珍|凤兰|志强|浩|豪|天|明|鸣|碌|鹏|德|华|博|州|斌|强|晋|杰|宏|睿|瑜|勇|坤"
          }
        ],
        "example": "@Firstname(逍遥|哪哪|曦曦)",
        "exampleValues": [
          "曦曦",
          "逍遥"
        ]
      },
      {
        "instance": "@Firstname(locale)",
        "description": "生成一个用户的名字，语言使用locale,字典使用默认的",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Firstname(en)",
        "exampleValues": [
          "Aaron",
          "Alan"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "名字字典，不指定时将使用默认名字,默认名字（50 个）：薇薇|紫沫|韩薇|艾莉|冥雪|雨玄|容夜|倾宇|翼杉|七夜|羽熙|超俊|政贤|阳洛|洛夜|宇成|佑染|政晧|诩浩|相宇|傲然|桂花|建国|淑华|桂兰|淑兰|婷婷|秀珍|凤兰|志强|浩|豪|天|明|鸣|碌|鹏|德|华|博|州|斌|强|晋|杰|宏|睿|瑜|勇|坤"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 803
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MLastname",
    "name": "@Lastname()",
    "description": "生成用户的姓氏",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Lastname()",
        "description": "生成一个用户的姓氏，语言中文",
        "example": "@Lastname()",
        "exampleValues": [
          "孙",
          "林",
          "梁"
        ]
      },
      {
        "instance": "@Lastname(dict)",
        "description": "生成一个用户的姓氏，字典使用dict",
        "parameters": [
          {
            "name": "dict",
            "description": "姓氏字典，不指定时将使用默认姓氏，默认姓氏（50 个）：李|王|张|刘|陈|杨|赵|黄|周|吴|徐|孙|胡|朱|高|林|何|郭|马|罗|梁|宋|郑|谢|韩|唐|冯|于|董|萧|程|曹|袁|邓|许|傅|沈|曾|彭|吕|苏|卢|蒋|蔡|贾|欧阳|太史|端木|上官|司马"
          }
        ],
        "example": "@Lastname(李|王|张|刘|陈)",
        "exampleValues": [
          "张",
          "王"
        ]
      },
      {
        "instance": "@Lastname(locale)",
        "description": "生成一个用户的姓氏，语言使用locale,字典使用默认的",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Lastname(en)",
        "exampleValues": [
          "Sun",
          "Zhang"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "姓氏字典，不指定时将使用默认姓氏，默认姓氏（50 个）：李|王|张|刘|陈|杨|赵|黄|周|吴|徐|孙|胡|朱|高|林|何|郭|马|罗|梁|宋|郑|谢|韩|唐|冯|于|董|萧|程|曹|袁|邓|许|傅|沈|曾|彭|吕|苏|卢|蒋|蔡|贾|欧阳|太史|端木|上官|司马"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 804
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MMobile",
    "name": "@Mobile()",
    "description": "生成手机号",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Mobile()",
        "description": "生成一个手机号，区域是中国",
        "example": "@Mobile()",
        "exampleValues": [
          "13293932848",
          "18764113305"
        ]
      },
      {
        "instance": "@Mobile(locale)",
        "description": "生成一个手机号，语言使用locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Mobile(en)",
        "exampleValues": [
          "07790421505",
          "07866557530"
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 805
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MLandline",
    "name": "@Landline()",
    "description": "生成座机号",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Landline()",
        "description": "生成一个座机号，区域是中国",
        "example": "@MLandline()",
        "exampleValues": [
          "",
          ""
        ]
      },
      {
        "instance": "@Landline(locale)",
        "description": "生成一个座机号，语言使用locale",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@MLandline(en)",
        "exampleValues": [
          "",
          ""
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 805
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MEmail",
    "name": "@Email()",
    "description": "生成邮箱",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Email()",
        "description": "生成一个邮箱，长度为6～20个字符，",
        "example": "@Email()",
        "exampleValues": [
          "WF8W5NFeMyrMKAx@153.com",
          "CcbZYdmDEtWGEY1@yahoo.com.cn"
        ]
      },
      {
        "instance": "@Email(suffix)",
        "description": "生成一个邮箱，长度为6～20个字符，后缀为默认值",
        "parameters": [
          {
            "name": "suffix",
            "description": "邮箱后缀，多个值以“|”分割，默认值： @xcan.cloud |@hotmail.com |@126.com |@yahoo.com.cn |@yahoo.com |@live.com |@153.com |@qq.com"
          }
        ],
        "example": "@Email(@xcan.cloud)",
        "exampleValues": [
          "WF8W5NFeMyrMKAx@xcan.cloud",
          "CcbZYdmDEtWGEY1@xcan.cloud"
        ]
      },
      {
        "instance": "@Email(min,max)",
        "description": "生成一个邮箱，长度为min～max个字符，后缀为默认值",
        "parameters": [
          {
            "name": "min",
            "description": "邮箱最小长度，默认 6 个字符，最小 1 个字符"
          },
          {
            "name": "max",
            "description": "邮箱最大长度，默认 20 个字符，最大 65535 个字符"
          }
        ],
        "example": "@Email(5,10)",
        "exampleValues": [
          "zjs7cb@hotmail.com",
          "jsGH6sc@yahoo.com"
        ]
      },
      {
        "instance": "@Email(min,max,suffix)",
        "description": "生成一个邮箱，长度为min～max个字符，后缀为指定的suffix",
        "parameters": [
          {
            "name": "min",
            "description": "邮箱最小长度，默认 6 个字符，最小 1 个字符"
          },
          {
            "name": "max",
            "description": "邮箱最大长度，默认 20 个字符，最大 65535 个字符"
          },
          {
            "name": "suffix",
            "description": "邮箱后缀，多个值以“|”分割，默认值： @xcan.cloud |@hotmail.com |@126.com |@yahoo.com.cn |@yahoo.com |@live.com |@153.com |@qq.com"
          }
        ],
        "example": "@Email(5,5,@xcan.cloud)",
        "exampleValues": [
          "4g4Fv@xcan.cloud",
          "Hv8jh@xcan.cloud"
        ]
      }
    ],
    "parameters": [
      {
        "name": "min",
        "description": "邮箱最小长度，默认 6 个字符，最小 1 个字符"
      },
      {
        "name": "max",
        "description": "邮箱最大长度，默认 20 个字符，最大 65535 个字符"
      },
      {
        "name": "suffix",
        "description": "邮箱后缀，多个值以“|”分割，默认值： @xcan.cloud |@hotmail.com |@126.com |@yahoo.com.cn |@yahoo.com |@live.com |@153.com |@qq.com"
      }
    ],
    "order": 806
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MGender",
    "name": "@Gender()",
    "description": "生成用户的姓别",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Gender()",
        "description": "生成一个用户的姓别，语言中文",
        "example": "@Gender()",
        "exampleValues": [
          "男",
          "女"
        ]
      },
      {
        "instance": "@Gender(dict)",
        "description": "生成一个用户的姓氏，字典使用dict",
        "parameters": [
          {
            "name": "dict",
            "description": "性别字典，默认：中文默认性别：男|女"
          }
        ],
        "example": "@Gender(F|M))",
        "exampleValues": [
          "F",
          "M"
        ]
      },
      {
        "instance": "@Gender(locale)",
        "description": "生成一个用户的姓氏，语言使用locale,字典使用默认的",
        "parameters": [
          {
            "name": "locale",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@Gender(en)",
        "exampleValues": [
          "male",
          "female"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "性别字典，默认：中文默认性别：男|女"
      },
      {
        "name": "locale",
        "description": "自定义值字典，多个值以“|”分割"
      }
    ],
    "order": 807
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.user.MEducation",
    "name": "@Education()",
    "description": "生成指定强度随机密码",
    "tags": [
      "用户信息"
    ],
    "constructors": [
      {
        "instance": "@Education()",
        "description": "生成一个学历，语言为中文，默认词典",
        "example": "@Education()",
        "exampleValues": [
          "本科"
        ]
      },
      {
        "instance": "@Education(dict)",
        "description": "生成一个学历，词典为指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "学历字典，默认：小学、初中、高中、大专、本科、研究生"
          }
        ],
        "example": "@Education(本科,硕士)",
        "exampleValues": [
          "本科"
        ]
      },
      {
        "instance": "@Education(locale)",
        "description": "生成一个学历，语言为指定的locale，默认词典",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Education(zh_CN)",
        "exampleValues": [
          "本科"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "学历字典，默认：小学、初中、高中、大专、本科、研究生"
      },
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 808
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.network.MAppName",
    "name": "@AppName()",
    "description": "生成应用名称",
    "tags": [
      "网络信息"
    ],
    "constructors": [
      {
        "instance": "@AppName()",
        "description": "生成一个应用名称，字典使用默认：\n-中文：微信|QQ|爱奇艺|腾讯视频|淘宝|微博|支付宝|优酷|WiFi万能钥匙|手机百度|QQ浏览器|今日头条|腾讯新闻|百度地图|酷狗音乐|搜索输入法|应用宝|腾讯手机管家|QQ音乐|高德地图|快手|京东|UC浏览器|360手机卫士|美团|美图秀秀|百度手机助手|酷我音乐|墨迹天气|华为应用市场|全民K歌|OPPO应用商店|滴滴出行|360手机助手|拼多多|芒果TV|360清理大师|美颜相机|百度网盘|小米应用商店|网页新闻|网页云音乐|天天快报|作业帮|猎豹清理大师|QQ空间|讯飞输入法|火山小视频|掌阅iReader|凤凰新闻|360浏览器|陌陌|唯品会|百度手机输入法|哔哩哔哩动画|新浪新闻|腾讯Wifi管家|搜狐新闻|百度贴吧|QQ同步助手|B612咔叽|携程旅行|QQ邮箱|QQ阅读|天猫|WPS Office|西瓜视频|去哪儿旅行|58同城|百度手机浏览器|Faceu激萌|中国工商银行|中国建设银行|搜狐视频|12306官方版|vivo应用商店|抖音|ofo共享单车|喜马拉雅FM|同花顺炒股票|唱吧|有道词典|百度手机卫士|摩拜单车|饿了么|触宝电话|暴风影音|天天P图|内涵段子|美团外卖|铃声多多|大众点评|快看漫画|迅雷|PP助手|新闻-oppo|苏宁易购|咪咕阅读|探探\n-英文：LiveIn - LivePic Widget|Wordle!|Subway Surfers|SHEIN - Online Fashion|TikTok|Cash App|Google Maps|BeReal. Your friends for real.|Amazon Shopping|Instagram|DoorDash - Essenslieferung|American Idol - Watch and Vote|Toca Life World: Build stories|Flo Period & Ovulation Tracker|iHealth COVID-19 Test|Wayfair – Shop All Things Home|Trivia Puzzle Fortune Games!|PictureThis - Plant Identifier|Brain Test: Tricky Puzzles|Twitch: Live Game Streaming|Shazam: Music Discovery|Poshmark: Buy & Sell Fashion|American Airlines|Chrome Browser|Samsung TouchWiz Home|Google|YouTube|Google Play Store|Facebook|Gmail|Facebook Messenger|Samsung Gallery|Google Maps|Amazon Prime Video|IMDb Movies and TV|Hulu|ESPN|Disney+|Arm Simulator|AllTrails|FotMob|LG SmartThinQ|Menards|Workday|Paycom|My Stocks Portfolio & Widget|CNBC|E*TRADE Mobile|Admob SDK|Google Analytics for Firebase SDK|Rec RoomParking Jam 3D",
        "example": "@AppName()",
        "exampleValues": [
          "搜狐新闻",
          "百度手机浏览器"
        ]
      },
      {
        "instance": "@AppName(dict)",
        "description": "生成一个应用名称，字典使用指定的dict",
        "parameters": [
          {
            "name": "dict",
            "description": "自定义值字典，多个值以“|”分割"
          }
        ],
        "example": "@AppName(星链|360|ie))",
        "exampleValues": [
          "360",
          "星链"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "自定义值字典，多个值以“|”分割"
      }
    ],
    "order": 901
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.network.MAppVersion",
    "name": "@AppVersion()",
    "description": "生成应用版本，格式：major.minor.patch[-releaseState][+buildstate]",
    "tags": [
      "网络信息"
    ],
    "constructors": [
      {
        "instance": "@AppVersion()",
        "description": "生成一个应用版本，字典使用默认的",
        "example": "@AppVersion()",
        "exampleValues": [
          "135.50.149",
          "199.31.103"
        ]
      },
      {
        "instance": "@AppVersion(prefixDict)",
        "description": "生成一个应用版本，前缀使用指定的prefixDict，没有发布状态和构建状态",
        "parameters": [
          {
            "name": "prefixDict",
            "description": "版本前缀，如：v，wchat ，默认不指定时无前缀"
          }
        ],
        "example": "@AppVersion(v|wchat)",
        "exampleValues": [
          "v-74.153.115",
          "m-223.100.154"
        ]
      },
      {
        "instance": "@AppVersion(prefixDict,releaseStateDict)",
        "description": "生成一个应用版本，前缀使用指定的prefixDict，发布状态字典使用指定的releaseStateDict，没有构建状态",
        "parameters": [
          {
            "name": "prefixDict",
            "description": "版本前缀，如：v，wchat ，默认不指定时无前缀"
          },
          {
            "name": "releaseStateDict",
            "description": "版本发布状态字典，示例：SNAPSHOT、BETA、RELEASE、DEMO、SP、TRIAL、LITE、FREE、ENHANCE"
          }
        ],
        "example": "@AppVersion(v|wchat,SNAPSHOT|BETA|RELEASE)",
        "exampleValues": [
          "v-237.22.12-SNAPSHOT",
          "m-110.126.74-BETA"
        ]
      },
      {
        "instance": "@AppVersion(prefixDict,releaseStateDict,buildStateDict)",
        "description": "生成一个应用版本，前缀使用指定的prefixDict，发布状态字典使用指定的releaseStateDict，构建状态字典使用指定的buildStateDict",
        "parameters": [
          {
            "name": "prefixDict",
            "description": "版本前缀，如：v，wchat ，默认不指定时无前缀"
          },
          {
            "name": "releaseStateDict",
            "description": "版本发布状态字典，示例：SNAPSHOT、BETA、RELEASE、DEMO、SP、TRIAL、LITE、FREE、ENHANCE"
          },
          {
            "name": "buildStateDict",
            "description": "版本构建状态字典，示例：build.1、build.2、build.3"
          }
        ],
        "example": "@AppVersion(v|wchat,SNAPSHOT|BETA|RELEASE,build.1|build.2)",
        "exampleValues": [
          "v-78.225.93-BETA+build2",
          "m-250.204.99-RELEASE+build1"
        ]
      }
    ],
    "parameters": [
      {
        "name": "prefixDict",
        "description": "版本前缀，如：v，wchat ，默认不指定时无前缀"
      },
      {
        "name": "releaseStateDict",
        "description": "版本发布状态字典，示例：SNAPSHOT、BETA、RELEASE、DEMO、SP、TRIAL、LITE、FREE、ENHANCE"
      },
      {
        "name": "buildStateDict",
        "description": "版本构建状态字典，示例：build.1、build.2、build.3"
      }
    ],
    "order": 902
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.network.MIPv4",
    "name": "@IPv4()",
    "description": "生成IPv4地址",
    "tags": [
      "网络信息"
    ],
    "constructors": [
      {
        "instance": "@IPv4()",
        "description": "生成一个IPv4地址，使用默认字典",
        "example": "@IPv4()",
        "exampleValues": [
          "185.122.62.64",
          "56.106.168.69"
        ]
      }
    ],
    "order": 903
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.network.MIPv6",
    "name": "@IPv6()",
    "description": "生成IPv6地址",
    "tags": [
      "网络信息"
    ],
    "constructors": [
      {
        "instance": "@IPv6()",
        "description": "生成一个IPv6地址",
        "example": "@IPv4()",
        "exampleValues": [
          "185.122.62.64",
          "56.106.168.69"
        ]
      }
    ],
    "order": 904
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.network.MMac",
    "name": "@Mac()",
    "description": "生成MAC地址",
    "tags": [
      "网络信息"
    ],
    "constructors": [
      {
        "instance": "@Mac()",
        "description": "生成一个MAC地址，范围：00:00:00:00:00:00 - FF:FF:FF:FF:FF:FF（6 字节 48 位，6 段 16 进制“:”相连）",
        "example": "@Mac()",
        "exampleValues": [
          "d8:01:8f:96:b1:f4",
          "65:d2:65:a5:6c:81",
          "2b:3d:70:76:69:f0"
        ]
      }
    ],
    "order": 905
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.network.MPort",
    "name": "@Port()",
    "description": "生成服务器随机端口",
    "tags": [
      "网络信息"
    ],
    "constructors": [
      {
        "instance": "@Port()",
        "description": "生成一个服务器随机端口",
        "example": "@Port()",
        "exampleValues": [
          "1025"
        ]
      },
      {
        "instance": "@Port(min,max)",
        "description": "生成一个服务器端口，范围为指定的min~max",
        "parameters": [
          {
            "name": "min",
            "description": "最小端口，不指定时默认 1024，最小 0"
          },
          {
            "name": "max",
            "description": "最大端口，不指定时默认 65535，最大 65535"
          }
        ],
        "example": "@Port(5000,10000)",
        "exampleValues": [
          "6000"
        ]
      }
    ],
    "parameters": [
      {
        "name": "min",
        "description": "最小端口，不指定时默认 1024，最小 0"
      },
      {
        "name": "max",
        "description": "最大端口，不指定时默认 65535，最大 65535"
      }
    ],
    "order": 906
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.network.MProtocol",
    "name": "@Protocol()",
    "description": "生成协议",
    "tags": [
      "网络信息"
    ],
    "constructors": [
      {
        "instance": "@Protocol()",
        "description": "生成一个协议，使用默认字典",
        "example": "@Protocol()",
        "exampleValues": [
          "SMTP"
        ]
      },
      {
        "instance": "@Protocol(dict)",
        "description": "生成一个协议，使用指定的字典dict",
        "parameters": [
          {
            "name": "dict",
            "description": "协议字典，不指定时默认：FTP|TFTP|HTTP|SMTP|DHCP|Telnet|DNS|SNMP|DNS|TCP|UDP|ARP|DHCP|SIP|RTP|RLP|RAP|L2TP|PPTP|SNMP|TFTP"
          }
        ],
        "example": "@Protocol(FTP|TFTP|HTTP)",
        "exampleValues": [
          "HTTP"
        ]
      }
    ],
    "parameters": [
      {
        "name": "dict",
        "description": "协议字典，不指定时默认：FTP|TFTP|HTTP|SMTP|DHCP|Telnet|DNS|SNMP|DNS|TCP|UDP|ARP|DHCP|SIP|RTP|RLP|RAP|L2TP|PPTP|SNMP|TFTP"
      }
    ],
    "order": 907
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.network.MUrl",
    "name": "@Url()",
    "description": "生成URL",
    "tags": [
      "网络信息"
    ],
    "constructors": [
      {
        "instance": "@Url()",
        "description": "生成一个学历，语言为中文，默认词典",
        "example": "@Url()",
        "exampleValues": [
          "http://127.0.0.1:8080/P1ZXOF9uI0/",
          "http://127.0.0.1:8080/Dcm"
        ]
      },
      {
        "instance": "@Url(max)",
        "description": "生成一个学历，语言为指定的locale，默认词典",
        "parameters": [
          {
            "name": "max",
            "description": "最大长度，默认 50 个字符，最大允许 65535 个字符"
          }
        ],
        "example": "@Url(true)",
        "exampleValues": [
          "http://www.xcan.org:8080/aacj/uics?acc=67&ubc7=8jFc",
          "http://www.xcan.org:8080/aacj/uics?name=8jkc&gggbssiu=78hbss"
        ]
      },
      {
        "instance": "@Url(max,protocol,domain,allowQueryParams)",
        "description": "生成一个学历，词典为指定的dict",
        "parameters": [
          {
            "name": "max",
            "description": "最大长度，默认 50 个字符，最大允许 65535 个字符"
          },
          {
            "name": "protocol",
            "description": "协议，固定值：http 或 https，默认 http"
          },
          {
            "name": "domain",
            "description": "域名或 IP，如：www.xcan.org、192.168.1.2，默认 127.0.0.1:8080"
          },
          {
            "name": "allowQueryParams",
            "description": "是否允许生产查询参数，如：http://127.0.0.1:8080/api/v1/user?`name=Tome&gender=male`, 默认 false"
          }
        ],
        "example": "@Url(https,www.xcan.org,user|name,true)",
        "exampleValues": [
          "https://www.xcan.org:8080/aacj/uics?user=67&name=8jFc",
          "https://www.xcan.org:8080/aacj/uics?name=8jkc&user=78hbss"
        ]
      }
    ],
    "parameters": [
      {
        "name": "max",
        "description": "最大长度，默认 50 个字符，最大允许 65535 个字符"
      },
      {
        "name": "protocol",
        "description": "协议，固定值：http 或 https，默认 http"
      },
      {
        "name": "domain",
        "description": "域名或 IP，如：www.xcan.org、192.168.1.2，默认 127.0.0.1:8080"
      },
      {
        "name": "allowQueryParams",
        "description": "是否允许生产查询参数，如：http://127.0.0.1:8080/api/v1/user?`name=Tome&gender=male`, 默认 false"
      }
    ],
    "order": 908
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.web.MEmoji",
    "name": "@Emoji()",
    "description": "生成随机Emoji表情符",
    "tags": [
      "网页应用"
    ],
    "constructors": [
      {
        "instance": "@Emoji()",
        "description": "生成随机Emoji表情符",
        "example": "@Emoji()",
        "exampleValues": [
          "😅",
          "😘"
        ]
      }
    ],
    "order": 1001
  },
  {
    "clazz": "cloud.xcan.jmock.core.function.web.MColor",
    "name": "@Color()",
    "description": "生成Web颜色值",
    "tags": [
      "网页应用"
    ],
    "constructors": [
      {
        "instance": "@Color()",
        "description": "生成默认 rgb 格式随机颜色值",
        "example": "@Color()",
        "exampleValues": [
          "rgb(88, 245, 14)",
          "rgb(97, 69, 216)"
        ]
      },
      {
        "instance": "@Color(format)",
        "description": "生成指定格式随机颜色值",
        "parameters": [
          {
            "name": "format",
            "description": "颜色格式，支持值：rgb、hsl、hwb、lch、cmyk，不指定或者指定不支持格式时默认 rgb"
          }
        ],
        "example": "@Color(hwb)",
        "exampleValues": [
          "hwb(108, 67%, 45%)",
          "hwb(133, 2%, 93%)"
        ]
      }
    ],
    "parameters": [
      {
        "name": "format",
        "description": "颜色格式，支持值：rgb、hsl、hwb、lch、cmyk，不指定或者指定不支持格式时默认 rgb"
      }
    ],
    "order": 1002
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MBrand",
    "name": "@Brand()",
    "description": "生成汽车品牌",
    "tags": [
      "汽车"
    ],
    "constructors": [
      {
        "instance": "@Brand()",
        "description": "生成默认随机汽车品牌",
        "example": "@Brand()",
        "exampleValues": [
          "Peugeot",
          "Nissan",
          "Chery"
        ]
      }
    ],
    "order": 2001
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MDrivetrain",
    "name": "@Drivetrain()",
    "description": "生成动力系统",
    "tags": [
      "汽车"
    ],
    "constructors": [
      {
        "instance": "@Drivetrain()",
        "description": "生成默认随机动力系统类型",
        "example": "@Drivetrain()",
        "exampleValues": [
          "AWD (All-Wheel Drive)",
          "RWD (Rear-Wheel Drive)",
          "FWD (Front-Wheel Drive)"
        ]
      }
    ],
    "order": 2002
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MEngine",
    "name": "@Engine()",
    "description": "生成汽车引擎",
    "tags": [
      "汽车"
    ],
    "constructors": [
      {
        "instance": "@Engine()",
        "description": "生成默认随机汽车引擎类型",
        "example": "@Engine()",
        "exampleValues": [
          "2.2L Diesel",
          "3.5L V6 Turbo",
          "1.5L I4 Turbo"
        ]
      }
    ],
    "order": 2003
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MHorsepower",
    "name": "@Horsepower()",
    "description": "生成汽车马力",
    "tags": [
      "汽车"
    ],
    "constructors": [
      {
        "instance": "@Horsepower()",
        "description": "生成默认随机汽车马力值",
        "example": "@Horsepower()",
        "exampleValues": [
          "723 HP",
          "71 HP",
          "982 HP"
        ]
      }
    ],
    "order": 2004
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MPlate",
    "name": "@Plate()",
    "description": "生成车牌号",
    "tags": [
      "汽车"
    ],
    "constructors": [
      {
        "instance": "@Plate()",
        "description": "生成默认随机车牌号",
        "example": "@Plate()",
        "exampleValues": [
          "渝G ZKK97",
          "甘J FKH92",
          "ABCDEFGHJKLMNPQRSTUVWXYZ0123456789773"
        ]
      }
    ],
    "order": 2005
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MVehicle",
    "name": "@Vehicle()",
    "description": "生成车牌号",
    "tags": [
      "汽车"
    ],
    "constructors": [
      {
        "instance": "@Vehicle()",
        "description": "生成默认随机车牌号",
        "example": "@Vehicle()",
        "exampleValues": [
          "Coupe",
          "SUV",
          "Station Wagon"
        ]
      }
    ],
    "order": 2006
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MCodeSnippet",
    "name": "@CodeSnippet()",
    "description": "生成代码",
    "tags": [
      "代码"
    ],
    "constructors": [
      {
        "instance": "@CodeSnippet()",
        "description": "生成JAVA代码片段",
        "example": "@CodeSnippet()",
        "exampleValues": [
          "public class MathUtils {\n    /**\n     * Calculate the square of a number\n     */\n    public static int updateResult(int userCount) {\n        int newCount = userCount * userCount;\n        return newCount;\n    }\n\n    public static void main(String[] args) {\n        int result = updateResult(3);\n        System.out.println(\"Square of \" + 3 + \" is \" + result);\n    }\n}"
        ]
      },
      {
        "instance": "@CodeSnippet(language)",
        "description": "生成指定编程语言代码片段",
        "parameters": [
          {
            "name": "language",
            "description": "编程语言，支持值：PYTHON,JAVA,JAVASCRIPT,TYPESCRIPT,CPP,CSHARP,PHP,RUBY,SWIFT,GO"
          }
        ],
        "example": "@CodeSnippet(PYTHON)",
        "exampleValues": [
          "def calculateResult(currentTotal):\n    \"\"\"Calculate the square of a number\"\"\"\n    data = currentTotal ** 2\n    return data\n\n# Function call\nresult = calculateResult(94)\nprint(f\"Square of 94 is {result}\")"
        ]
      }
    ],
    "parameters": [
      {
        "name": "language",
        "description": "编程语言，支持值：PYTHON,JAVA,JAVASCRIPT,TYPESCRIPT,CPP,CSHARP,PHP,RUBY,SWIFT,GO"
      }
    ],
    "order": 3001
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MErrorType",
    "name": "@ErrorType()",
    "description": "生成错误",
    "tags": [
      "代码"
    ],
    "constructors": [
      {
        "instance": "@ErrorType()",
        "description": "生成默认随机异常类型",
        "example": "@ErrorType()",
        "exampleValues": [
          "ReferenceError",
          "IndexOutOfBoundsException"
        ]
      }
    ],
    "order": 3002
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MHtml",
    "name": "@Html()",
    "description": "生成Html内容",
    "tags": [
      "代码"
    ],
    "constructors": [
      {
        "instance": "@Html()",
        "description": "生成默认随机Html内容",
        "example": "@Html()",
        "exampleValues": [
          "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Blog Hub</title>\n  <style>\n    body {\n      font-family: Georgia, 'Times New Roman', Times, serif;\n      line-height: 1.6;\n      color: #333;\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n      background-color: #f9f9f9;\n    }\n\n    .container {\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      padding: 20px;\n      margin-bottom: 30px;\n    }\n\n    h1, h2, h3 {\n      color: #f39c12;\n      margin-top: 0;\n    }\n\n    .btn {\n      display: inline-block;\n      padding: 10px 20px;\n      background-color: #d35400;\n      color: white;\n      text-decoration: none;\n      border-radius: 4px;\n      border: none;\n      cursor: pointer;\n      font-weight: bold;\n      transition: background-color 0.3s;\n    }\n\n    .btn:hover {\n      background-color: #c0392b;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin: 20px 0;\n    }\n\n    th, td {\n      border: 1px solid #ddd;\n      padding: 12px;\n      text-align: left;\n    }\n\n    th {\n      background-color: #f2f2f2;\n    }\n\n    .form-group {\n      margin-bottom: 15px;\n    }\n\n    label {\n      display: block;\n      margin-bottom: 5px;\n      font-weight: bold;\n    }\n\n    input, textarea, select {\n      width: 100%;\n      padding: 10px;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n    }\n  </style>\n</head>\n<body>\n<div class=\"container\">\n  <h1>Introduction to Company Mission</h2>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua<code></code>.</p>\n  <p>Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua<strong></strong>. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit<strong></strong>.</p>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris<u></u>. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.</p>\n  <ol>\n    <li>Key element that saves time</li>\n    <li>Important benefit that saves time</li>\n    <li>Critical aspect that saves time</li>\n    <li>Critical benefit that enhances security</li>\n    <li>Primary element that reduces costs</li>\n  </ol>\n  <img src=\"https://picsum.photos/533/425\" alt=\"Landscape\" class=\"responsive-img\">\n  <table>\n    <thead>\n      <tr>\n        <th>Price</th>\n        <th>Date</th>\n        <th>Price</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>26</td>\n        <td>16</td>\n        <td>Product A</td>\n      </tr>\n      <tr>\n        <td>56</td>\n        <td>100</td>\n        <td>Component D</td>\n      </tr>\n      <tr>\n        <td>44</td>\n        <td>27</td>\n        <td>Component D</td>\n      </tr>\n      <tr>\n        <td>70</td>\n        <td>Service B</td>\n        <td>Component D</td>\n      </tr>\n      <tr>\n        <td>26</td>\n        <td>89</td>\n        <td>Service B</td>\n      </tr>\n      <tr>\n        <td>42</td>\n        <td>Feature E</td>\n        <td>Product A</td>\n      </tr>\n    </tbody>\n  </table>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"field0\">Phone</label>\n      <input type=\"password\" id=\"field0\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"field1\">Message</label>\n      <input type=\"text\" id=\"field1\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"field2\">Message</label>\n      <textarea id=\"field2\" rows=\"4\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"field3\">Message</label>\n      <input type=\"email\" id=\"field3\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"field4\">Message</label>\n      <textarea id=\"field4\" rows=\"4\"></textarea>\n    </div>\n    <button type=\"submit\" class=\"btn\">Save</button>\n  </form>\n</div>\n</body>\n</html>"
        ]
      }
    ],
    "order": 3003
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MMarkdown",
    "name": "@Markdown()",
    "description": "生成Markdown内容",
    "tags": [
      "代码"
    ],
    "constructors": [
      {
        "instance": "@Markdown()",
        "description": "生成默认随机Markdown内容",
        "example": "@Markdown()",
        "exampleValues": [
          "# Kubernetes Project Overview\n![License](https://img.shields.io/badge/license-MIT-blue.svg) ![Version](https://img.shields.io/badge/version-1.0.0-green.svg) ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg)\n## Table of Contents\n\n- [Introduction](#introduction)\n- [Features](#features)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Usage\n\n### Basic Usage\n\nThe modular design allows for selective adoption of components. The architecture is built on proven best practices and industry standards.\n\n```json\nconsole.log('Hello, World!');\n```\n\n### Advanced Features\n\nThe modular design allows for selective adoption of components. Integration with existing systems is straightforward and well-documented. Integration with existing systems is straightforward and well-documented.\n\n| Feature | Description | Status |\n|---------|-------------|--------|\n| optimization | automates interface | 🔄 Planned |\n| loop | transforms function | 🔄 Planned |\n| implementation | transforms class | ✅ Implemented |\n| algorithm | facilitates optimization | ✅ Implemented |\n| abstraction | optimizes implementation | ✅ Implemented |\n| function | facilitates function | 🔄 Planned |\n| implementation | enhances class | 🔄 Planned |\n| implementation | simplifies interface | 🔄 Planned |\n\n\n### Common Patterns\n\nExtensive customization options allow tailoring to specific use cases.\n\n```xml\nconsole.log('Hello, World!');\n```\n\nIntegration with existing systems is straightforward and well-documented.\n\n\n## Installation\n\nBefore you begin, ensure you have the following prerequisites:\n\n1. - [ ] facilitates interface\n2. lightweight implementation\n3. interface:\n  - conditional\n\n\n### Installation Steps\n\n#### Step 1\n\nIntegration with existing systems is straightforward and well-documented.\n\n```yaml\nserver:\n  port: 8080\n\ndatabase:\n  host: localhost\n  name: example\n```\n\n#### Step 2\n\nPerformance benchmarks demonstrate significant improvements over alternatives. The modular design allows for selective adoption of components.\n\n```json\nconsole.log('Hello, World!');\n```\n\n#### Step 3\n\nCompatibility with multiple platforms extends the potential use cases.\n\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.get('/', (req, res) => {\n    res.send('Hello World!');\n});\n\napp.listen(3000);\n```\n\n---\n## Configuration\n\n### Configuration Options\n\nThe following options can be specified in the configuration file:\n\n| Parameter | Type | Default | Description | Required |\n|---|---|---|---|---|\n| `config.interface` | string | `\"\"` | modular configuration for loop | Yes |\n| `config.conditional` | string | `null` | high-performance configuration for interface | No |\n| `config.optimization` | integer | `null` | lightweight configuration for algorithm | Yes |\n| `config.optimization` | string | `null` | flexible configuration for algorithm | Yes |\n| `config.variable` | integer | `null` | secure configuration for interface | Yes |\n| `config.variable` | integer | `0` | high-performance configuration for loop | No |\n| `config.interface` | integer | `null` | powerful configuration for loop | No |\n\n\n### Example Configuration\n\n```yaml\nserver:\n  port: 8080\n\ndatabase:\n  host: localhost\n  name: example\n```\n\n\n## Examples\n\n### Example 1\n\nIntegration with existing systems is straightforward and well-documented.\n\n```typescript\nconsole.log('Hello, World!');\n```\n\n**Explanation:**\n\nThis project provides a comprehensive solution for modern development challenges.\n\n### Example 2\n\nExtensive customization options allow tailoring to specific use cases.\n\n```shell\ncurl -O https://example.com/install.sh\nchmod +x install.sh\n./install.sh\n```\n\n**Explanation:**\n\nExtensive customization options allow tailoring to specific use cases.\n\n### Example 3\n\nCompatibility with multiple platforms extends the potential use cases. With its intuitive `optimization`, you can achieve significant productivity gains.\n\n```shell\ncurl -O https://example.com/install.sh\nchmod +x install.sh\n./install.sh\n```\n\n**Explanation:**\n\nExtensive customization options allow tailoring to specific use cases.\n\n---\n## Examples\n\n### Example 1\n\nCommunity support and active development ensure long-term viability.\n\n```yaml\nserver:\n  port: 8080\n\ndatabase:\n  host: localhost\n  name: example\n```\n\n**Explanation:**\n\nPerformance benchmarks demonstrate significant improvements over alternatives. Performance benchmarks demonstrate significant improvements over alternatives. Performance benchmarks demonstrate significant improvements over alternatives.\n\n### Example 2\n\nWith its intuitive `implementation`, you can achieve significant productivity gains.\n\n```python\ndef main():\n    print(\"Hello, World!\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n**Explanation:**\n\nWith its intuitive design, you can achieve significant productivity gains. The architecture is built on proven best practices and industry standards.\n\n### Example 3\n\nPerformance benchmarks demonstrate significant improvements over alternatives. Compatibility with multiple platforms extends the potential use cases.\n\n```dockerfile\nconsole.log('Hello, World!');\n```\n\n**Explanation:**\n\nSecurity considerations are at the forefront of the `abstraction` philosophy.\n\n\n## Features\n\nWith its intuitive `algorithm`, you can achieve significant productivity gains. Extensive customization options allow tailoring to specific use cases. The architecture is built on proven best practices and industry standards. With its intuitive `function`, you can achieve significant productivity gains.\n\n- powerful class\n- abstraction:\n  - function\n- high-performance abstraction\n- secure conditional\n- optimization:\n    - conditional\n\n## Advanced Topics\n\nThis project provides a comprehensive solution for modern development challenges. Security considerations are at the forefront of the design philosophy. The architecture is built on proven best practices and industry standards.\n\n> [!danger]\n> With its intuitive design, you can achieve significant productivity gains.\n\n1. flexible interface\n2. intuitive abstraction\n3. function:\n    - variable"
        ]
      }
    ],
    "order": 3004
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MProgrammingLanguage",
    "name": "@ProgrammingLanguage()",
    "description": "生成编程语言",
    "tags": [
      "代码"
    ],
    "constructors": [
      {
        "instance": "@ProgrammingLanguage()",
        "description": "生成true或false，比例2：1",
        "example": "@ProgrammingLanguage()",
        "exampleValues": [
          "Kotlin",
          "Scala",
          "JavaScript"
        ]
      }
    ],
    "order": 3005
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MBrowser",
    "name": "@Browser()",
    "description": "生成浏览器",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@Browser()",
        "description": "生成默认随机浏览器",
        "example": "@Browser()",
        "exampleValues": [
          "Firefox 119",
          "Opera 119"
        ]
      }
    ],
    "order": 5001
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MCloudService",
    "name": "@CloudService()",
    "description": "生成云服务",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@CloudService()",
        "description": "生成默认随机云服务",
        "example": "@MCloudService()",
        "exampleValues": [
          "Google Kubernetes Engine",
          "IBM Cloud Object Storage"
        ]
      }
    ],
    "order": 5002
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MOs",
    "name": "@Os()",
    "description": "生成操作系统",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@Os()",
        "description": "生成默认随机操作系统",
        "example": "@Os()",
        "exampleValues": [
          "iOS 16",
          "Windows Server 2022"
        ]
      }
    ],
    "order": 5003
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MRam",
    "name": "@Ram()",
    "description": "生成内存",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@Ram()",
        "description": "生成默认随机内存",
        "example": "@Ram()",
        "exampleValues": [
          "128GB DDR5 2933MHz",
          "32GB DDR4 5600MHz"
        ]
      }
    ],
    "order": 5004
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MCpuModel",
    "name": "@CpuModel()",
    "description": "生成CPU型号",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@CpuModel()",
        "description": "生成默认随机CPU型号",
        "example": "@MCloudService()",
        "exampleValues": [
          "Intel Xeon W-1390P",
          "Intel Core i9-13900K"
        ]
      }
    ],
    "order": 5005
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MDatabase",
    "name": "@Database()",
    "description": "生成数据库",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@Database()",
        "description": "生成默认随机数据库",
        "example": "@Database()",
        "exampleValues": [
          "MariaDB",
          "Amazon DynamoDB"
        ]
      }
    ],
    "order": 5006
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MDevice",
    "name": "@Device()",
    "description": "生成设备名",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@Device()",
        "description": "生成默认随机设备名",
        "example": "@Device()",
        "exampleValues": [
          "Mainframe",
          "Server"
        ]
      }
    ],
    "order": 5007
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MFileName",
    "name": "@FileName()",
    "description": "生成文件名",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@FileName()",
        "description": "生成默认随机文件名",
        "example": "@FileName()",
        "exampleValues": [
          "presentation_jan.xml",
          "report.pptx"
        ]
      }
    ],
    "order": 5008
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MFilePath",
    "name": "@FilePath()",
    "description": "生成文件路径",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@FilePath()",
        "description": "生成默认随机文件路径",
        "example": "@FilePath()",
        "exampleValues": [
          "F:\\Media\\Photos\\report_jan.exe",
          "/tmp/archive_jan.pdf"
        ]
      }
    ],
    "order": 5009
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MFramework",
    "name": "@Framework()",
    "description": "生成框架",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@Framework()",
        "description": "生成默认随机框架名称",
        "example": "@Framework()",
        "exampleValues": [
          "React Native",
          "Ruby on Rails"
        ]
      }
    ],
    "order": 5010
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MGpuModel",
    "name": "@GpuModel()",
    "description": "生成GPU型号",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@GpuModel()",
        "description": "生成默认随机GPU型号",
        "example": "@GpuModel()",
        "exampleValues": [
          "NVIDIA RTX 4080",
          "NVIDIA Quadro RTX 6000"
        ]
      }
    ],
    "order": 5011
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MHttpStatus",
    "name": "@HttpStatus()",
    "description": "生成Http状态码",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@HttpStatus()",
        "description": "生成默认随机Http状态码",
        "example": "@HttpStatus()",
        "exampleValues": [
          "302 Found",
          "500 Internal Server Error"
        ]
      }
    ],
    "order": 5012
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MVulnerability",
    "name": "@Vulnerability()",
    "description": "生成漏洞",
    "tags": [
      "计算机"
    ],
    "constructors": [
      {
        "instance": "@Vulnerability()",
        "description": "生成默认随机漏洞",
        "example": "@Vulnerability()",
        "exampleValues": [
          "XML External Entity (XXE)",
          "Security Misconfiguration"
        ]
      }
    ],
    "order": 5014
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MBase64",
    "name": "@Base64()",
    "description": "生成Base64字符串",
    "tags": [
      "密文"
    ],
    "constructors": [
      {
        "instance": "@Base64()",
        "description": "生成默认128字符长度随机字符串",
        "example": "@Base64()",
        "exampleValues": [
          "pWJCBBEyFi4THaYWOcLtlj+aWJ5w/v9SazFHbi+D/XQdY1AoFDkaF/hJlHS1tjITELoz5ROb7WS98Tio4IO796mezlxjdCT4c+Hdp5adjZNRK2FT3QZ0jKeOwM263KIT",
          "wddMreXApGyczv6Glsti22HtOABU69E1KacyRidg6l6AAD2fvPezQeN+jEUOyk9zwTgyA/WXsTUpw5f4C9TMS09V4rvm/ikQD3OQilYpo0g6MIblEToYBXnWS4ybnoMh"
        ]
      },
      {
        "instance": "@Base64(length)",
        "description": "生成指定字符长度随机字符串",
        "parameters": [
          {
            "name": "length",
            "description": "字符串长度"
          }
        ],
        "example": "@Base64(32)",
        "exampleValues": [
          "XII3JC7y4gQvCXLB7V08uKDvBORyDiVI",
          "LQqpeYt1sl3rlYPaLYQZUsKtALZj8Yt7"
        ]
      }
    ],
    "parameters": [
      {
        "name": "length",
        "description": "字符串长度"
      }
    ],
    "order": 6001
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MHash",
    "name": "@Hash()",
    "description": "生成哈希值",
    "tags": [
      "密文"
    ],
    "constructors": [
      {
        "instance": "@Hash()",
        "description": "生成默认MD5随机哈希值",
        "example": "@Hash()",
        "exampleValues": [
          "4cf8e6d87f05b4f979ff8775d1f78fb8",
          "46a7f33aab52baef179770517bedeb2b"
        ]
      },
      {
        "instance": "@Hash(algorithm)",
        "description": "生成指定算法随机哈希值",
        "parameters": [
          {
            "name": "algorithm",
            "description": "哈希算法，如：MD5、SHA-256等"
          }
        ],
        "example": "@Hash(SHA-256)",
        "exampleValues": [
          "191d55ca8427b35fffc964461ee430e15ea738f67885ad65162cdafc866da558",
          "6c9cd1dadcf6c447ef4b80a9e28d358350958f9c2b8e4ca4fcffefa2c6c8185a"
        ]
      }
    ],
    "parameters": [
      {
        "name": "algorithm",
        "description": "哈希算法，如：MD5、SHA-256等"
      }
    ],
    "order": 6002
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MHex",
    "name": "@Hex()",
    "description": "生成16进制值",
    "tags": [
      "密文"
    ],
    "constructors": [
      {
        "instance": "@Hex()",
        "description": "生成默认8个字符长度16进制值",
        "example": "@Hex()",
        "exampleValues": [
          "6c1aecc9",
          "45075b35"
        ]
      },
      {
        "instance": "@Hex(length)",
        "description": "生成指定字符长度16进制值",
        "parameters": [
          {
            "name": "length",
            "description": "16进制值长度"
          }
        ],
        "example": "@Hex(32)",
        "exampleValues": [
          "a45e50145cdee6c45141682ab3c2bce8",
          "c97e1952909460ccaf410a089ef1b41c"
        ]
      }
    ],
    "parameters": [
      {
        "name": "length",
        "description": "16进制值长度"
      }
    ],
    "order": 6003
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MKeyPair",
    "name": "@KeyPair()",
    "description": "生成密钥对",
    "tags": [
      "密文"
    ],
    "constructors": [
      {
        "instance": "@KeyPair()",
        "description": "生成默认RSA算法526大小Key的随机密钥对",
        "example": "@KeyPair()",
        "exampleValues": [
          "Public Key:\n-----BEGIN PUBLIC KEY-----\nMF0wDQYJKoZIhvcNAQEBBQADTAAwSQJCINq6aF16xfELo/7qNjGxYCiBjMWvGCSi\nuIWuel3qr/6y5tEaSF28kt9kuXUH+WRSiBRkjMlh+2Msi0BQPamOR6F5AgMBAAE=\n-----END PUBLIC KEY-----\n\nPrivate Key:\n-----BEGIN PRIVATE KEY-----\nMIIBWQIBADANBgkqhkiG9w0BAQEFAASCAUMwggE/AgEAAkIg2rpoXXrF8Quj/uo2\nMbFgKIGMxa8YJKK4ha56Xeqv/rLm0RpIXbyS32S5dQf5ZFKIFGSMyWH7YyyLQFA9\nqY5HoXkCAwEAAQJCCBBHEhhnaq+nsL9/EoANzdEDQt6+A8nyGiHNWgE0+a8kYlGd\ngqIU54IkjxvCW+j2alI045v2O4g0g2YYVwjkxnuRAiFSJDI3zxKV2kjM8iMv4E2K\nutyrI/U/7J1TVCHFJAYjJN0CIWZkr1aLQ/YAIGBOmqBegGjRHbpy5UzDoyKN6yFl\nj4mHTQIhMQYdWqWhyAIRdRAG5CoQ3X2M+i9pzg8gDn2l8g0ABLWZAiFH7IOphAvJ\n+g7D95LwAVGrzvBV7q0Y/fdSp2O5wtBPp6UCIU4MJyqLslRHwBgg/bFbp+oH8YjR\nm8UhZPMtr2RsE1i52g==\n-----END PRIVATE KEY-----"
        ]
      },
      {
        "instance": "@KeyPair(algorithm,keySize)",
        "description": "生成指定算法和Key大小的随机密钥对",
        "parameters": [
          {
            "name": "algorithm",
            "description": "生成算法，如：RSA, EC, DSA"
          },
          {
            "name": "keySize",
            "description": "Key大小，如：2048 RSA, 256 EC"
          }
        ],
        "example": "@KeyPair(EC,256)",
        "exampleValues": [
          "Public Key:\n-----BEGIN PUBLIC KEY-----\nMF0wDQYJKoZIhvcNAQEBBQADTAAwSQJCNFUTq6yj/nhluxtj+sRNFl2L/AGuDNUs\nhw8gdRcQBPShH0Q+wlxjLLESu2EXHpvtCgRVUajCV240WRy9hhis5HdPAgMBAAE=\n-----END PUBLIC KEY-----\n\nPrivate Key:\n-----BEGIN PRIVATE KEY-----\nMIIBWQIBADANBgkqhkiG9w0BAQEFAASCAUMwggE/AgEAAkI0VROrrKP+eGW7G2P6\nxE0WXYv8Aa4M1SyHDyB1FxAE9KEfRD7CXGMssRK7YRcem+0KBFVRqMJXbjRZHL2G\nGKzkd08CAwEAAQJCB0mjvCAGFG1iyVwmn6jPjWJImLcJLGtRUJuYKwYjqnUAjLYC\n/7JjZpZ8z+6QBxXV9tz5ynIAccbRkxpCnqEQC/QlAiF+BDX++1uoOnLvfQHb0mN0\n4R47FXCCJv1SmHVjUpVv55UCIWpP55219mvomEuXyaXAi8PQkzULNZCTbnRvndil\nZOpaUwIhNthIU9g79QSzPy4N4Ak6BgVwLdDP7aVgfVEjTf4EUfbdAiFMWpkyFwcl\n10bSO/Dyn8iB2aJwXV2aOZkB/Uwz1g4VlssCIX2TEF/qTyy4PAGQUwNeGIWo4h6a\nyOf7XXnOoEYUPaP2gw==\n-----END PRIVATE KEY-----"
        ]
      }
    ],
    "parameters": [
      {
        "name": "algorithm",
        "description": "生成算法，如：RSA, EC, DSA"
      },
      {
        "name": "keySize",
        "description": "Key大小，如：2048 RSA, 256 EC"
      }
    ],
    "order": 6004
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MSymmetricKey",
    "name": "@SymmetricKey()",
    "description": "生成对称加密Key",
    "tags": [
      "密文"
    ],
    "constructors": [
      {
        "instance": "@SymmetricKey()",
        "description": "生成默认AES算法加密Key",
        "example": "@SymmetricKey()",
        "exampleValues": [
          "wCnChNn+2WSH6saSatASL+3Bo3HcW8uEz8jHqM7TtQs=",
          "/IWyWbP42jcWFB47zmLCfWVGK6nnRkrBM/dJqnRt+bU="
        ]
      },
      {
        "instance": "@SymmetricKey(algorithm)",
        "description": "生成指定算法加密Key",
        "parameters": [
          {
            "name": "algorithm",
            "description": "生成算法，如：RSA, EC, DSA"
          }
        ],
        "example": "@SymmetricKey(AES)",
        "exampleValues": [
          "wiuUG5/rfxB1r9VtxfgO1jy1TLyAmo5xFBm7iOPosAs=",
          "zHexV+cHC3O9T70eU2FEgSsFTfOmOsD/lJfGQOj90Aw="
        ]
      }
    ],
    "parameters": [
      {
        "name": "algorithm",
        "description": "生成算法，如：RSA, EC, DSA"
      }
    ],
    "order": 6005
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MAmount",
    "name": "@Amount()",
    "description": "生成随机金额",
    "tags": [
      "财务"
    ],
    "constructors": [
      {
        "instance": "@Amount()",
        "description": "生成默认中国本地化金额值",
        "example": "@Amount()",
        "exampleValues": [
          "¥532,009.41",
          "¥795,734.08"
        ]
      },
      {
        "instance": "@Amount(locale)",
        "description": "生成指定区域金额值",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@Amount(en)",
        "exampleValues": [
          "¤249,495.63",
          "¤965,859.18"
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 7001
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MBudgetCategory",
    "name": "@BudgetCategory()",
    "description": "生成预算分类",
    "tags": [
      "财务"
    ],
    "constructors": [
      {
        "instance": "@BudgetCategory()",
        "description": "生成默认中文预算分类",
        "example": "@BudgetCategory()",
        "exampleValues": [
          "市场营销",
          "差旅报销"
        ]
      },
      {
        "instance": "@BudgetCategory(locale)",
        "description": "生成指定语言预算分类",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@BudgetCategory(en)",
        "exampleValues": [
          "Taxes",
          "Travel & Reimbursement"
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 7002
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MCurrency",
    "name": "@Currency()",
    "description": "生成货币",
    "tags": [
      "财务"
    ],
    "constructors": [
      {
        "instance": "@Currency()",
        "description": "生成默认中国本地化货币",
        "example": "@MCurrency()",
        "exampleValues": [
          "EUR",
          "EUR"
        ]
      },
      {
        "instance": "@Currency(locale)",
        "description": "生成指定区域货币",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@MCurrency(en)",
        "exampleValues": [
          "CNY",
          "CAD"
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 7003
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MInvoiceNumber",
    "name": "@InvoiceNumber()",
    "description": "生成发票编号",
    "tags": [
      "财务"
    ],
    "constructors": [
      {
        "instance": "@InvoiceNumber()",
        "description": "生成默认中国本地化发票编号",
        "example": "@InvoiceNumber()",
        "exampleValues": [
          "FP-202506-63498",
          "FP-202506-75545"
        ]
      },
      {
        "instance": "@InvoiceNumber(locale)",
        "description": "生成指定区域发票编号",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@InvoiceNumber(en)",
        "exampleValues": [
          "INV-202506-18877",
          "INV-202506-81864"
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 7004
  },
  {
    "clazz": "cloud.xcan.jmock.plugin.MTaxCode",
    "name": "@TaxCode()",
    "description": "生成税码",
    "tags": [
      "财务"
    ],
    "constructors": [
      {
        "instance": "@TaxCode()",
        "description": "生成默认中国本地化税码",
        "example": "@TaxCode()",
        "exampleValues": [
          "11010RU5G000",
          "11010LJR5000",
          "110109LGN000"
        ]
      },
      {
        "instance": "@TaxCode(locale)",
        "description": "生成指定区域税码",
        "parameters": [
          {
            "name": "locale",
            "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
          }
        ],
        "example": "@TaxCode(en)",
        "exampleValues": [
          "XX-LNDL6HY7",
          "L4B-ZK85QS"
        ]
      }
    ],
    "parameters": [
      {
        "name": "locale",
        "description": "国际化语言，目前只支持中文（zh_CN）和英文（en）、默认`zh_CN`"
      }
    ],
    "order": 7005
  }
]